lucenequery
===========

This is a small utility library for generating safe lucene queries
(such as required for Solr):

>>> from zeit.find import lucenequery as lq

Various field queries
---------------------

This is a query on a single field:

>>> print lq.field('text', 'foo')
text:"foo"

We try it with multiple words:

>>> print lq.field('text', 'foo bar')
text:"foo bar"

We can also use nasty characters safely, as they will be escaped:

>>> print lq.field('text', 'bar ||')
text:"bar \|\|"

We can also do a text range query:

>>> print lq.text_range('name', 'abc', 'xyz')
name:["abc" TO "xyz"]

Ranges can also be left open on each end::

>>> print lq.text_range('name', None, 'xyz')
name:[* TO "xyz"]

>>> print lq.text_range('name', 'abc', None)
name:["abc" TO *]

Let's look at date ranges:

>>> from datetime import datetime
>>> print lq.date_range('name', 
...   datetime(2008, 1, 1), datetime(2009, 1, 1))
name:[2008-01-01T00:00:00Z TO 2009-01-01T00:00:00Z]

Open date ranges:

>>> print lq.date_range('name', 
...   None, datetime(2009, 1, 1))
name:[* TO 2009-01-01T00:00:00Z]

>>> print lq.date_range('name', 
...   datetime(2008, 1, 1), None)
name:[2008-01-01T00:00:00Z TO *]

Combining queries
-----------------

We can combine a query with AND:

>>> print lq.and_(lq.field('name1', 'value1'),
...               lq.field('name2', 'value2'))
(name1:"value1" AND name2:"value2")

We can also combine a query with OR:

>>> print lq.or_(lq.field('name1', 'value1'),
...              lq.field('name2', 'value2'))
(name1:"value1" OR name2:"value2")
