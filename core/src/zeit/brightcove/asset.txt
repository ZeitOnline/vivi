Assets
======


Videos can be referenced as assets. An audio id comes along with the videos.

>>> import zeit.cms.testing
>>> zeit.cms.testing.set_site()
>>> p = zeit.cms.testing.create_interaction()

>>> import zeit.cms.interfaces
>>> import zeit.brightcove.interfaces
>>> content = zeit.cms.interfaces.ICMSContent(
...     'http://xml.zeit.de/testcontent')
>>> av = zeit.brightcove.interfaces.IVideoAsset(content)
>>> av
<zeit.brightcove.asset.VideoAsset object at 0x...>
>>> import zeit.cms.checkout.helper
>>> video = zeit.cms.interfaces.ICMSContent(
...     'http://video.zeit.de/video/1234')
>>> playlist = zeit.cms.interfaces.ICMSContent(
...     'http://video.zeit.de/playlist/2345')
>>> with zeit.cms.checkout.helper.checked_out(content) as co:
...     av = zeit.brightcove.interfaces.IVideoAsset(co)
...     av.video = video
...     av.video_2 = playlist
...     av.audio_id = 'aud34'
>>> import zeit.connector.interfaces
>>> p = zeit.connector.interfaces.IWebDAVProperties(content)
>>> p[('audio_id', u'http://namespaces.zeit.de/CMS/document')]
u'aud34'
>>> p[('video_id', u'http://namespaces.zeit.de/CMS/document')]
u'http://video.zeit.de/video/1234'
>>> p[('video_id_2', u'http://namespaces.zeit.de/CMS/document')]
u'http://video.zeit.de/playlist/2345'

Audio and video are noted in the xml reference:

>>> import lxml.etree
>>> import zeit.cms.content.interfaces
>>> import zope.component
>>> node = zope.component.getAdapter(
...     content, zeit.cms.content.interfaces.IXMLReference, name='related')
>>> print lxml.etree.tostring(node, pretty_print=True),
<reference ...href="http://xml.zeit.de/testcontent"...>...
    <audio audio_id="aud34"/>
    <video
      href="http://video.zeit.de/video/1234"
      href2="http://video.zeit.de/playlist/2345"
      expires="2010-03-26T05:00:00+00:00"
      video_id="vid1234" video_id_2="pls2345"/>
...
</reference>

When an IXMLReferenceUpdater is applied to the node the video elements do not
duplicate (as they used to):


>>> updater = zeit.cms.content.interfaces.IXMLReferenceUpdater(content)
>>> updater.update(node)
>>> len(node.findall('video'))
1
>>> len(node.findall('audio'))
1

When the ids are None the respective elements are removed from the XML:

>>> with zeit.cms.checkout.helper.checked_out(content) as co:
...     av = zeit.brightcove.interfaces.IVideoAsset(co)
...     av.video = None
...     av.video_2 = None
...     av.audio_id = None
>>> updater = zeit.cms.content.interfaces.IXMLReferenceUpdater(content)
>>> updater.update(node)
>>> len(node.findall('video'))
0
>>> len(node.findall('audio'))
0

A freshly created node also does not contain those elements:

>>> node = zope.component.getAdapter(
...     content, zeit.cms.content.interfaces.IXMLReference, name='related')
>>> len(node.findall('video'))
0
>>> len(node.findall('audio'))
0


Missing expire dates don't cause trouble:

>>> video = zeit.cms.interfaces.ICMSContent(
...     'http://video.zeit.de/video/6789')
>>> with zeit.cms.checkout.helper.checked_out(content) as co:
...     av = zeit.brightcove.interfaces.IVideoAsset(co)
...     av.video = video
...     av.video_2 = None
>>> node = zope.component.getAdapter(
...     content, zeit.cms.content.interfaces.IXMLReference, name='related')
>>> print lxml.etree.tostring(node, pretty_print=True),
<reference ...href="http://xml.zeit.de/testcontent"...>...
  <video
    href="http://video.zeit.de/video/6789"
    href2="" expires=""
    video_id="vid6789" video_id_2=""/>
...
</reference>
