
Caching
=======

>>> import zeit.cms.testing
>>> zeit.cms.testing.set_site()
>>> import zope.component
>>> import zeit.cms.repository.interfaces
>>> repository = zope.component.getUtility(
...     zeit.cms.repository.interfaces.IRepository)

The map of local_name to unique_id is cached. Initially it is not defined:

>>> import pprint
>>> pprint.pprint(repository['online']._v_local_unique_map)
Traceback (most recent call last):
    ...
AttributeError: 'Folder' object has no attribute '_v_local_unique_map'...

After accessing something it will be filled:

>>> repository['online'].keys()
['2005', '2006', '2007', '2022']
>>> pprint.pprint(repository['online']._v_local_unique_map)
{'2005': 'http://xml.zeit.de/online/2005',
 '2006': 'http://xml.zeit.de/online/2006',
 '2007': 'http://xml.zeit.de/online/2007',
 '2022': 'http://xml.zeit.de/online/2022'}
>>> pprint.pprint(repository._content)
{'http://xml.zeit.de/online': <zeit.cms.repository.folder.Folder...>}


On transaction boundaries this cache is deleted:

>>> import transaction
>>> transaction.commit()

>>> repository._content
{}

>>> repository['online']._v_local_unique_map
Traceback (most recent call last):
    ...
AttributeError: 'Folder' object has no attribute '_v_local_unique_map'...

Let's fill the cache again and try abort:

>>> repository['online'].keys()
['2005', '2006', '2007', '2022']
>>> pprint.pprint(repository['online']._v_local_unique_map)
{'2005': 'http://xml.zeit.de/online/2005',
 '2006': 'http://xml.zeit.de/online/2006',
 '2007': 'http://xml.zeit.de/online/2007',
 '2022': 'http://xml.zeit.de/online/2022'}
>>> pprint.pprint(repository._content)
{'http://xml.zeit.de/online': <zeit.cms.repository.folder.Folder...>}

>>> transaction.abort()

>>> repository._content
{}

>>> repository['online']._v_local_unique_map
Traceback (most recent call last):
    ...
AttributeError: 'Folder' object has no attribute '_v_local_unique_map'...
