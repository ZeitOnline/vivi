<configure xmlns="http://namespaces.zope.org/zope">

  <class class=".repository.Repository">
    <require like_class="zope.app.folder.folder.Folder" />
    <require
      interface="zeit.cms.interfaces.ICMSContent"
      permission="zope.View" />
  </class>

  <class class=".folder.Folder">
    <implements interface="zope.annotation.interfaces.IAttributeAnnotatable" />
    <require like_class="zope.app.folder.folder.Folder" />
    <require
      interface=".interfaces.IRename"
      permission="zeit.RenameContent"
      />
    <require
      interface="zeit.cms.interfaces.ICMSContent"
      permission="zope.View" />
  </class>

  <interface
    interface=".interfaces.IFolder"
    type="zeit.cms.interfaces.ICMSContentType"
    />

  <adapter factory=".folder.folderFactory" name="collection" />
  <adapter factory=".folder.folderToResource" />

  <adapter factory=".repository.cmscontentFactory" />

  <!-- content object creation

  The adapters are registered with the identifying name. Note that those names
  are not known yet, and therefore are filled with guessed values.
  -->

  <subscriber handler=".repository.initializeRepository" />
  
  <adapter factory=".preference.preferenceFactory" />

  <adapter factory=".unknown.unknownResourceFactory" name="unknown" />
  <adapter factory=".unknown.resourceFactory" />
  <class class=".unknown.UnknownResource">
    <implements interface="zope.annotation.interfaces.IAttributeAnnotatable" />
    <require interface=".interfaces.IUnknownResource"
      permission="zope.View" />
    <require set_schema=".interfaces.IUnknownResource"
      permission="zeit.EditContent" />
    <require interface="zeit.cms.content.interfaces.ITextContent"
      permission="zope.View" />
    <require set_schema="zeit.cms.content.interfaces.ITextContent"
      permission="zeit.EditContent" />
  </class>
  
</configure>

