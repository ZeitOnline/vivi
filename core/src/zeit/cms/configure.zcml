<configure
  xmlns="http://namespaces.zope.org/zope"
  xmlns:i18n="http://namespaces.zope.org/i18n"
  xmlns:grok="http://namespaces.zope.org/grok"
  xmlns:zcml="http://namespaces.zope.org/zcml"
  i18n_domain="zeit.cms">

  <include package="grokcore.component" file="meta.zcml" />
  <include file="meta.zcml" />

  <grok:grok package="." exclude="application browser celery cleanup generation metrics relstorage testcontenttype testing webtest zope" />

  <!-- Include requirements -->
  <include package="zeit.cms" file="securitypolicy.zcml" />

  <!-- local includes -->

  <include file="permissions.zcml" />
  <include file="patches.zcml" />

  <include package=".admin" />
  <include package=".content" />
  <include package=".related" />
  <include package=".checkout"  />
  <include package=".repository" />
  <include package=".workingcopy" />
  <include package=".clipboard" />
  <include package=".locking" />
  <include package=".workflow" />
  <include package=".settings" />
  <include package=".tagging" />
  <include package=".section" />
  <include package=".retractlog" />


  <!-- configuration -->

  <utility
    name="zeit.cms"
    provides="zope.generations.interfaces.ISchemaManager"
    component=".generation.manager"
    />

  <utility factory=".tracing.tracer_from_product_config"
    zcml:condition="have zeit.cms.tracing.otlp"/>
  <utility factory=".tracing.default_tracer"
    zcml:condition="not-have zeit.cms.tracing.otlp"/>

  <utility factory=".tracing.prometheus_metrics_multiproc"
    zcml:condition="have zeit.cms.tracing.prometheus.multiproc"/>
  <utility
      factory="opentelemetry.sdk.extension.prometheus_multiprocess.MultiProcessRegistry"
      provides=".interfaces.IPrometheusRegistry"
    zcml:condition="have zeit.cms.tracing.prometheus.multiproc"/>

  <utility factory=".tracing.prometheus_metrics_singleproc"
    zcml:condition="have zeit.cms.tracing.prometheus.singleproc"/>
	<utility
		component="prometheus_client.REGISTRY"
		provides=".interfaces.IPrometheusRegistry"
	  zcml:condition="have zeit.cms.tracing.prometheus.singleproc"/>

  <subscriber handler=".cleanup.clean_previous_interaction" />

  <!-- lxml security settings -->

  <class class="lxml.etree._Element">
    <implements interface=".interfaces.IXMLElement" />

    <require permission="zope.View"
      attributes="
      __getitem__
      getchildren
      get
      find
      findall
      getparent
      index
      iterchildren
      tag
      text
      xpath
      "/>
    <require permission="zeit.EditContent"
      attributes="
      __setslice__
      append
      insert
      makeelement
      replace
      " />
  </class>

  <!-- BBB -->
  <class class="lxml.objectify.ObjectifiedElement">
    <implements interface=".interfaces.IXMLElement" />
    <require like_class="lxml.etree._Element" />
  </class>
  <class class="lxml.objectify.StringElement">
    <require like_class="lxml.etree._Element" />
  </class>
  <class class="lxml.objectify.IntElement">
    <require like_class="lxml.etree._Element" />
  </class>
  <class class="lxml.objectify.NoneElement">
    <require like_class="lxml.etree._Element" />
  </class>

  <class class="lxml.etree.ElementChildIterator">
    <require permission="zope.View"
      attributes="__iter__ next" />
  </class>

</configure>
