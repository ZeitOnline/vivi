<configure
  xmlns="http://namespaces.zope.org/zope"
  xmlns:i18n="http://namespaces.zope.org/i18n"
  xmlns:grok="http://namespaces.zope.org/grok"
  i18n_domain="zeit.cms">

  <include package="grokcore.component" file="meta.zcml" />
  <include package="grokcore.view" file="meta.zcml" />
  <include package="grokcore.view"/>
  <include file="meta.zcml" />

  <grok:grok package="." exclude="browser celery testcontenttype" />

  <!-- Include requirements -->
  <include package="zeit.cms" file="securitypolicy.zcml" />

  <!-- local includes -->

  <include file="permissions.zcml" />

  <include package=".admin" />
  <include package=".content" />
  <include package=".related" />
  <include package=".checkout"  />
  <include package=".repository" />
  <include package=".workingcopy" />
  <include package=".syndication" />
  <include package=".clipboard" />
  <include package=".locking" />
  <include package=".workflow" />
  <include package=".relation" />
  <include package=".settings" />
  <include package=".tagging" />
  <include package=".section" />
  <include package=".redirect" />
  <include package=".retractlog" />


  <!-- configuration -->

  <utility
    name="zeit.cms"
    provides="zope.app.generations.interfaces.ISchemaManager"
    component=".generation.manager"
    />

  <!-- cleanup -->
  <subscriber handler=".cleanup.clean_exc_info" />
  <subscriber handler=".cleanup.clean_previous_interaction" />

  <!-- lxml security settings -->

  <class class="lxml.objectify.ObjectifiedElement">
    <require permission="zope.View"
      attributes="
      __getitem__
      countchildren
      get
      find
      findall
      getparent
      index
      iterchildren
      tag
      text
      xpath
      "/>
    <require permission="zeit.EditContent"
      attributes="
      __setslice__
      append
      insert
      makeelement
      replace
      " />
  </class>

  <class class="lxml.objectify.StringElement">
    <require like_class="lxml.objectify.ObjectifiedElement" />
  </class>

  <class class="lxml.objectify.IntElement">
    <require like_class="lxml.objectify.ObjectifiedElement" />
  </class>

  <class class="lxml.objectify.NoneElement">
    <require like_class="lxml.objectify.ObjectifiedElement" />
  </class>

  <class class="lxml.etree.ElementChildIterator">
    <require permission="zope.View"
      attributes="__iter__ next" />
  </class>

</configure>
