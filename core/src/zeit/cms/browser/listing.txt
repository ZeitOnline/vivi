===============
Folder Listings
===============

There is a general way to list folders as all listings should look the same.

Create a browser first:

>>> from z3c.etestbrowser.testing import ExtendedTestBrowser 
>>> browser = ExtendedTestBrowser()
>>> browser.addHeader('Authorization', 'Basic user:userpw')


The filelisting is to be found under /repository. To get a dojo based
FilteringTable open a specific folder:

>>> browser.open('http://localhost/++skin++cms/repository/2007/01')

We expect a normal file listing:

>>> browser.etree.xpath("//table[contains(@class, 'contentListing')]")
[<Element table...>]
>>> columns = browser.etree.xpath("//table/thead/tr/th")
>>> len(columns)
10


Breadcrums
==========

Similar to the filelisting, we expect that breadcrumbs are displayed at
the header bar:

>>> bc = browser.etree.xpath('//ul[@id="breadcrumbs"]/li/a')
>>> bc
[<Element a ...>, <Element a ...>]
>>> bc[0].text
'repository'
>>> bc[1].text
'2007'


Deleteing Content
=================

Deleting works by selecting the objects to remove via a checkbox and clicking
`LÃ¶schen`. We delete the article "LB01-DOSSaufschwung" here:

>>> 'LB01-DOSSaufschwung' in browser.contents
True
>>> checkbox = browser.getControl(
...     name="selection_column.TEIwMS1ET1NTYXVmc2Nod3VuZw==.")
>>> checkbox.value = True
>>> browser.getLink("Delete").click()
>>> print browser.contents
<?xml ...
<!DOCTYPE ...
    Do you really want to delete: 
    ...
    <span>01</span>
    (<span>http://xml.zeit.de/2007/01</span>)
    ...
>>> browser.getControl("Yes, delete it.").click()
>>> 'LB01-DOSSaufschwung' in browser.contents
False
