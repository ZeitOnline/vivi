===============
Folder Listings
===============

There is a general way to list folders as all listings should look the same.

Create a browser first:

>>> from z3c.etestbrowser.testing import ExtendedTestBrowser 
>>> browser = ExtendedTestBrowser()
>>> browser.addHeader('Authorization', 'Basic user:userpw')


The filelisting is to be found under /repository. To get a dojo based
FilteringTable open a specific folder:

>>> browser.open('http://localhost/++skin++cms/repository/2007/01')

We expect a normal file listing:

>>> browser.etree.xpath("//table[contains(@class, 'contentListing')]")
[<Element table...>]
>>> columns = browser.etree.xpath("//table/thead/tr/th")
>>> len(columns)
10


Breadcrums
==========

Similar to the filelisting, we expect that breadcrumbs are displayed at
the header bar:

>>> bc = browser.etree.xpath('//ul[@id="breadcrumbs"]/li/a')
>>> bc
[<Element a ...>, <Element a ...>]
>>> bc[0].text
'repository'
>>> bc[1].text
'2007'


Deleteing Content
=================

Deleting works by clicking on the 'Delete' icon in the context-actions
menu. The user get's a confirmation screen, on where he explicitly
confirms deleting the content.

>>> 'LS-Personalvertretung' in browser.contents
True
>>> article_view_url = (
... 'http://localhost/++skin++cms/repository/2007/01/'
... 'LS-Personalvertretung/deletecontent.html')
>>> browser.open(article_view_url)
>>> print browser.contents
<div class="topcontent deleteScreen">
  ...
    Do you really want to delete: 
    ...
    <span>LS-Personalvertretung</span>
    (<span>http://xml.zeit.de/2007/01/LS-Personalvertretung</span>)
    ...
>>> browser.getControl("Yes, delete it.").click()
>>> 'LS-Personalvertretung' in browser.contents
False

The "Delete" Link references now a javascript driven Lightbox:

>>> browser.getLink("Delete")
<Link text='[IMG] Delete' url="javascript:zeit.cms.lightbox_form('http://localhost/++skin++cms/repository/2007/01/@@deletecontent.html')">

The user selects an article and clicks on the delete icon. Deletion of
content is context dependent, so he might accidently delete a folder. If
this happens, he is beeing warned in the confirmation dialog:

>>> folder_view_url = (
... 'http://localhost/++skin++cms/repository/2007/01/'
... 'deletecontent.html')
>>> browser.open(folder_view_url)
>>> print browser.contents
<div ...
    Do you really want to delete: 
    ...
    <span>01</span>
    (<span>http://xml.zeit.de/2007/01</span>)
    </p>
    <h1 class="Warning"> You're about to delete a folder with content!
    </h1>
    ...
>>> browser.getControl("Do as I say: Delete.")
<SubmitControl name='delete' type='submit'>
