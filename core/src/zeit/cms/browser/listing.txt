===============
Folder Listings
===============

There is a general way to list folders as all listings should look the same.

Create a browser first:

>>> from z3c.etestbrowser.testing import ExtendedTestBrowser 
>>> browser = ExtendedTestBrowser()
>>> browser.addHeader('Authorization', 'Basic user:userpw')


The filelisting is to be found under /repository. To get a dojo based
FilteringTable open a specific folder:

>>> browser.open('http://localhost/++skin++cms/repository/2007/01')

We expect a normal file listing:

>>> browser.etree.xpath("//table[contains(@class, 'contentListing')]")
[<Element table...>]
>>> columns = browser.etree.xpath("//table/thead/tr/th")
>>> len(columns)
10


Breadcrums
==========

Similar to the filelisting, we expect that breadcrumbs are displayed at
the header bar:

>>> bc = browser.etree.xpath('//ul[@id="breadcrumbs"]/li/a')
>>> bc
[<Element a ...>, <Element a ...>]
>>> bc[0].text
'repository'
>>> bc[1].text
'2007'


Deleting Content
================

Deleting works by clicking on the 'Delete' icon in the context-actions
menu. The user get's a confirmation screen, on where he explicitly
confirms deleting the content.

>>> 'LS-Personalvertretung' in browser.contents
True
>>> article_view_url = (
...     'http://localhost/++skin++cms/repository/2007/01/'
...     'LS-Personalvertretung/deletecontent.html')
>>> browser.open(article_view_url)
>>> print browser.contents
<div class="topcontent deleteScreen">
  <h1>Delete content</h1>
  <p>
    <span>
      Do you really want to delete the object from the folder
      "<span class="containerName">01</span>"?
    </span>
  </p>
  <p class="DeleteItem">
    <img src="http://localhost/++skin++cms/@@/zeit-cms-repository-interfaces-IUnknownResource-zmi_icon.png" alt="UnknownResource" width="20" height="20" border="0" />
    <span>LS-Personalvertretung</span>
    (<span>http://xml.zeit.de/2007/01/LS-Personalvertretung</span>)
  </p>
  <form action="http://localhost/++skin++cms/repository/2007/01/LS-Personalvertretung/deletecontent.html">
    <p>
      <input type="submit" value="Delete" name="delete" />
    </p>
  </form>
</div>


After deleting the article it is gone:

>>> browser.getControl("Delete").click()
>>> 'LS-Personalvertretung' in browser.contents
False

The "Delete" Link references now a javascript driven Lightbox:

>>> browser.getLink("Delete", index=1)
<Link text='[IMG] Delete'
    url="javascript:zeit.cms.lightbox_form('http://localhost/++skin++cms/repository/2007/01/@@deletecontent.html')">

The user selects an article and clicks on the delete icon. Deletion of
content is context dependent, so he might accidently delete a folder. If
this happens, he is beeing warned in the confirmation dialog:

>>> folder_view_url = (
...     'http://localhost/++skin++cms/repository/2007/01/'
...     'deletecontent.html')
>>> browser.open(folder_view_url)
>>> print browser.contents
<div class="topcontent deleteScreen">
  <h1>Delete content</h1>
  <p>
    <span>
      Do you really want to delete the object from the folder
      "<span class="containerName">2007</span>"?
    </span>
  </p>
  <p class="DeleteItem">
    <img src="http://localhost/++skin++cms/@@/zeit-cms-repository-interfaces-IFolder-zmi_icon.png" alt="Folder" width="20" height="20" border="0" />
    <span>01</span>
    (<span>http://xml.zeit.de/2007/01</span>)
  </p>
  <h1 class="Warning">
      You're about to delete a folder with content!
  </h1>
  <form action="http://localhost/++skin++cms/repository/2007/01/deletecontent.html">
    <p>
      <input type="submit" value="Delete" name="delete" />
    </p>
  </form>
</div>


>>> browser.getControl("Delete").click()
>>> browser.url
'http://localhost/++skin++cms/repository/2007'
>>> browser.open('http://localhost/++skin++cms/repository/2007/01')
Traceback (most recent call last):
    ...
HTTPError: HTTP Error 404: Not Found


Hit counter
===========

When there is an adapter to IAccessCounter the information provided by the
adapter will be shown in listings. Right now there is no access counter, so
we just get an empty column:

>>> browser.open('http://localhost/++skin++cms/repository/online/2007/01')
>>> print browser.contents
<?xml ...
  <tbody>
  <tr class="odd">
    <td>
      <img src="http://localhost/++skin++cms/@@/zeit-cms-repository-interfaces-IUnknownResource-zmi_icon.png" alt="UnknownResource" width="20" height="20" border="0" />
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
      4schanzentournee-abgesang
    </td>
    <td>
      <span class="filename">4schanzentournee-abgesang</span>
    </td>
    <td>
      2008 3 7  12:47:16
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
      <span class="SearchableText">4schanzentournee-abgesang</span><span class="URL">http://localhost/++skin++cms/repository/online/2007/01/4schanzentournee-abgesang</span><span class="uniqueId">http://xml.zeit.de/online/2007/01/4schanzentournee-abgesang</span>
    </td>
  </tr>
  ...


Now create an access counter which alwasy returns 42:

>>> class AccessCounter(object):
...     hits = 42
...     def __init__(self, context):
...         self.context = context
...
>>> import zope.component
>>> import zeit.cms.interfaces
>>> import zeit.cms.content.interfaces
>>> gsm = zope.component.getGlobalSiteManager()
>>> gsm.registerAdapter(
...     AccessCounter, (zeit.cms.interfaces.ICMSContent, ),
...     zeit.cms.content.interfaces.IAccessCounter)


Now we have 42 accesses:

>>> browser.open('http://localhost/++skin++cms/repository/online/2007/01')
>>> print browser.contents
<?xml ...
  <tbody>
  <tr class="odd">
    <td>
      <img src="http://localhost/++skin++cms/@@/zeit-cms-repository-interfaces-IUnknownResource-zmi_icon.png" alt="UnknownResource" width="20" height="20" border="0" />
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
      4schanzentournee-abgesang
    </td>
    <td>
      <span class="filename">4schanzentournee-abgesang</span>
    </td>
    <td>
      2008 3 7  12:47:16
    </td>
    <td>
      <span class="hitCounter">42</span>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
      <span class="SearchableText">4schanzentournee-abgesang</span><span class="URL">http://localhost/++skin++cms/repository/online/2007/01/4schanzentournee-abgesang</span><span class="uniqueId">http://xml.zeit.de/online/2007/01/4schanzentournee-abgesang</span>
    </td>
  </tr>
  ...


Clean up:

>>> gsm.unregisterAdapter(
...     AccessCounter, (zeit.cms.interfaces.ICMSContent, ),
...     zeit.cms.content.interfaces.IAccessCounter)
True

