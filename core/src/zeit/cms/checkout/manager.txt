Checkout and checkin manager
============================

Content which can be checked out needs to be adaptable to ILocalContent.
Adapting to ILocalContent needs to be a (rather) cheap operation because it's
done often and also to *check* if it is possible.


>>> import zope.component
>>> gsm = zope.component.getGlobalSiteManager()
>>> import zeit.cms.testing
>>> p = zeit.cms.testing.create_interaction()
>>> zeit.cms.testing.set_site()

Create a dummy content:

>>> import zeit.cms.interfaces
>>> import zope.annotation.interfaces
>>> import zope.interface
>>> class IContent(zeit.cms.interfaces.ICMSContent):
...     pass
>>> class Content(object):
...     zope.interface.implements(
...         IContent, zope.annotation.interfaces.IAttributeAnnotatable)
...     uniqueId = u'testcontent://'
...     __name__ = u'karlheinz'

>>> content = Content()

Checking out is not possible due to the lacking ILocalContent adapter:

>>> from zeit.cms.checkout.interfaces import ICheckoutManager, ICheckinManager
>>> manager = ICheckoutManager(content)
>>> manager.canCheckout
False
>>> manager.checkout()
Traceback (most recent call last):
    ...
CheckinCheckoutError: Could not adapt content to ILocalContent


Define an adapter to ILocalContent:

>>> import copy
>>> from zeit.cms.checkout.interfaces import ILocalContent
>>> @zope.component.adapter(IContent)
... @zope.interface.implementer(ILocalContent)
... def local_content(context):
...     local = copy.copy(context)
...     local.are_you_local = True
...     zope.interface.alsoProvides(local, ILocalContent)
...     return local
>>> gsm.registerAdapter(local_content)


Checking out works now. Note that a locking support is not necessary:

>>> checked_out = manager.checkout()
>>> checked_out.are_you_local
True


Checkin doesn't work right now, because there is no IRepositoryContent adapter.
``canCheckin`` cannot detect this though, because we cannot just adapt to
``IRepositoryContent`` to "try":

>>> manager = ICheckinManager(checked_out)
>>> manager.canCheckin
True
>>> manager.checkin()
Traceback (most recent call last):
    ...
ComponentLookupError: (<Content object at 0x...>, <InterfaceClass zeit.cms.checkout.interfaces.IRepositoryContent>, u'')


Provide an adapter:

>>> from zeit.cms.checkout.interfaces import IRepositoryContent
>>> @zope.component.adapter(IContent)
... @zope.interface.implementer(IRepositoryContent)
... def repository_content(context):
...     content = copy.copy(context)
...     content.are_you_local = False
...     zope.interface.noLongerProvides(content, ILocalContent)
...     return content
>>> gsm.registerAdapter(repository_content)

Checkin works now:

>>> checked_in = manager.checkin()
>>> checked_in.are_you_local
False


Clean up:

>>> gsm.unregisterAdapter(local_content)
True
>>> gsm.unregisterAdapter(repository_content)
True
