Semantic change
===============

The SemanticChange adapter indicates the last semantic change [#functional]_:

>>> import zeit.cms.content.interfaces
>>> content = repository['testcontent']
>>> sc = zeit.cms.content.interfaces.ISemanticChange(content)
>>> sc.last_semantic_change is None
True

The last semantic change is set on checkin:

>>> import zeit.cms.checkout.helper
>>> with zeit.cms.checkout.helper.checked_out(content, semantic_change=True):
...     pass
>>> content = repository['testcontent']
>>> sc = zeit.cms.content.interfaces.ISemanticChange(content)
>>> sc.last_semantic_change
datetime.datetime(..., tzinfo=<UTC>)

.. [#functional]

    >>> import zeit.cms.testing
    >>> zeit.cms.testing.set_site()
    >>> p = zeit.cms.testing.create_interaction()
    >>> dummy = with_statement

    >>> import zope.component
    >>> import zeit.cms.repository.interfaces
    >>> repository = zope.component.getUtility(
    ...     zeit.cms.repository.interfaces.IRepository)
