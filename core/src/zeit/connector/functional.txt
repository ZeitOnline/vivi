==========================
Functional connector tests
==========================

Test the integration with zope 3.

>>> import zope.app.component.hooks
>>> old_site = zope.app.component.hooks.getSite()
>>> zope.app.component.hooks.setSite(getRootFolder())

Get the connector:

>>> import zope.component
>>> import zeit.connector.interfaces
>>> connector = zope.component.getUtility(
...     zeit.connector.interfaces.IConnector)
>>> connector
<zeit.connector.zopeconnector.ZopeConnector object at 0x...>


>>> connector['http://xml.zeit.de/testing']
<zeit.connector.resource.CachedResource object at 0x...>
>>> res = connector['http://xml.zeit.de/index']
>>> res
<zeit.connector.resource.CachedResource object at 0x...>
>>> res.data
<open file '...', mode 'rb' at 0x...>


>>> list(connector.listCollection('http://xml.zeit.de/testing'))
[]


Invalidation events
===================

When an `IResourceInvalidatedEvent` is issued the caches remove their
information about the event's resource. Let's fill the property-cache:

>>> property_cache = zope.component.getUtility(
...     zeit.connector.interfaces.IPropertyCache)
>>> property_cache['resource-id'] = {'foo': 'bar'}
>>> property_cache['another-id'] = {'bar': 'baz'}
>>> property_cache['yet-another-id'] = {'nu': 'jazz'}

Let's also fill the childname cache:

>>> child_name_cache = zope.component.getUtility(
...     zeit.connector.interfaces.IChildNameCache)
>>> child_name_cache['resource-id'] = ['abc']
>>> child_name_cache['another-id'] = ['def']
>>> child_name_cache['yet-another-id'] = ['ghi']


Invalidate `another-id` via an event:

>>> import zope.event
>>> zope.event.notify(
...     zeit.connector.interfaces.ResourceInvaliatedEvent('another-id'))

The data is gone now:

>>> import pprint
>>> pprint.pprint(list(sorted(property_cache._storage.keys())))
[u'http://xml.zeit.de/index',
 u'http://xml.zeit.de/testing/',
 'resource-id',
 'yet-another-id']
>>> pprint.pprint(list(sorted(child_name_cache._storage.keys())))
[u'http://xml.zeit.de/testing/',
 'resource-id',
 'yet-another-id']

Nothing special happens when the caches do not know anything about the resource
anyway:

>>> zope.event.notify(
...     zeit.connector.interfaces.ResourceInvaliatedEvent('another-id'))



After tests we clean up:

>>> zope.app.component.hooks.setSite(old_site)
