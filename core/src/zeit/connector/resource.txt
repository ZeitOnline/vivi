Resource objects
================

>>> import zeit.connector.resource
>>> def property_getter():
...     print "Getting properties"
...     return {'foo': 'bar'}
>>> resource = zeit.connector.resource.CachedResource(
...     'id', 'name', 'type', property_getter, None, None)
>>> resource.properties
Getting properties
<zeit.connector.resource.ReadOnlyWebDAVProperties object at 0x...>

>>> del resource.properties['foo']
Traceback (most recent call last):
    ...
RuntimeError: Cannot write on ReadOnlyWebDAVProperties

>>> resource.properties.clear()
Traceback (most recent call last):
    ...
RuntimeError: Cannot write on ReadOnlyWebDAVProperties

>>> resource.properties.update({})
Traceback (most recent call last):
    ...
RuntimeError: Cannot write on ReadOnlyWebDAVProperties

>>> resource.properties.setdefault('foo', 'bar')
Traceback (most recent call last):
    ...
RuntimeError: Cannot write on ReadOnlyWebDAVProperties

>>> resource.properties.pop('foo')
Traceback (most recent call last):
    ...
RuntimeError: Cannot write on ReadOnlyWebDAVProperties

>>> resource.properties.popitem()
Traceback (most recent call last):
    ...
RuntimeError: Cannot write on ReadOnlyWebDAVProperties
