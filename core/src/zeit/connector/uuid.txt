===============
 UUID handling
===============

>>> from zeit.connector.interfaces import UUID_PROPERTY
>>> import zeit.connector.interfaces
>>> import zope.component
>>> connector = zope.component.getUtility(zeit.connector.interfaces.IConnector)

UUIDs are generated by the DAV server by default:

>>> import StringIO
>>> import zeit.connector.resource
>>> res = zeit.connector.resource.Resource(
...     'http://xml.zeit.de/testing/uuid', 'uuid', 'text',
...     StringIO.StringIO('Pop goes the weasel!'),
...     contentType='text/plain')
>>> print res.properties.get(UUID_PROPERTY)
None
>>> connector.add(res)
>>> res = connector[res.id]
>>> uuid = res.properties[UUID_PROPERTY]
>>> uuid
'{urn:uuid:...}'

Changing the property does not have any effect:

>>> connector.changeProperties(
...     res.id, {UUID_PROPERTY: '{urn:uuid:foo}'})
>>> res = connector[res.id]
>>> res.properties[UUID_PROPERTY] == uuid
True

Adding the same resource with the same UUID again works silently:

>>> connector.add(res)
>>> res = connector[res.id]
>>> res.properties[UUID_PROPERTY] == uuid
True

But trying to add the same resource with a different UUID fails:

>>> uuid = '{urn:uuid:42d5d75c-25fc-424d-904a-a61b02bc0439}'
>>> res = zeit.connector.resource.Resource(
...     'http://xml.zeit.de/testing/uuid', 'uuid', 'text',
...     StringIO.StringIO('Pop goes the weasel!'),
...     contentType='text/plain')
>>> res.properties[UUID_PROPERTY] = uuid
>>> connector.add(res)
Traceback (most recent call last):
...
HTTPException: (409, 'Conflict'...

Overwriting the resource with another one that does not have a UUID works:

>>> res = zeit.connector.resource.Resource(
...     'http://xml.zeit.de/testing/uuid', 'uuid', 'text',
...     StringIO.StringIO('Pop goes the weasel!'),
...     contentType='text/plain')
>>> connector.add(res)

When the resource does not exist, the UUID can be defined by the client by
setting the property:

>>> res = zeit.connector.resource.Resource(
...     'http://xml.zeit.de/testing/uuid2', 'uuid2', 'text',
...     StringIO.StringIO('Pop goes the weasel!'),
...     contentType='text/plain')
>>> res.properties[UUID_PROPERTY] = uuid
>>> connector.add(res)
>>> res = connector[res.id]
>>> res.properties[UUID_PROPERTY] == uuid
True

Adding another resource with an existing UUID is an error:

>>> res = zeit.connector.resource.Resource(
...     'http://xml.zeit.de/testing/error', 'error', 'text',
...     StringIO.StringIO('Pop goes the weasel!'),
...     contentType='text/plain')
>>> res.properties[UUID_PROPERTY] = uuid
>>> connector.add(res)
Traceback (most recent call last):
...
HTTPException: (409, 'Conflict'...

Copying a resource creates a new UUID:

>>> connector.copy('http://xml.zeit.de/testing/uuid2',
...                'http://xml.zeit.de/testing/uuid3')
>>> res = connector['http://xml.zeit.de/testing/uuid3']
>>> res.properties[UUID_PROPERTY] == uuid
False
