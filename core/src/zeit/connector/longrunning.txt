Long running transactions
=========================

Let's test the behaviour of long running transactions. That is we do something
with the connector, wait quite a while and continue. This used to yield
BadStatusLine errors.

>>> import os
>>> from zeit.connector.connector import Connector
>>> connector = Connector(roots={
...       "default": os.environ['connector-url']})


Enable debugging of the http data:

>>> import zeit.connector.dav.davbase
>>> zeit.connector.dav.davbase.DEBUG_CONNECTION = True


Remember the connection for later:

>>> connection = connector.get_connection()._con

Get a list:

>>> list(connector.listCollection('http://xml.zeit.de/testing/'))
connect: (...)
send: 'HEAD http://.../testing/ HTTP/1.1...Connection: keep-alive...
reply: 'HTTP/1.1 200 OK\r\n'
header: Date: ...
header: Server: ...
header: Keep-Alive: timeout=15, max=100
header: Connection: Keep-Alive
header: Content-Type: text/html;charset=UTF-8
send: 'PROPFIND ...
send: '<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<ns0:propfind xmlns:ns0="DAV:"><ns0:allprop/></ns0:propfind>'
reply: 'HTTP/1.1 207 Multi-Status\r\n'
header: Date: ...
header: Server: ...
header: Content-Length: 914
header: Keep-Alive: timeout=15, max=99
header: Connection: Keep-Alive
header: Content-Type: text/xml; charset="utf-8"
...
[]


So apparently we may only wait 15 seconds before the connection will time out.

>>> import time
>>> time.sleep(15)
>>> connector._invalidate_cache('http://xml.zeit.de/testing/')
>>> list(connector.listCollection('http://xml.zeit.de/testing/'))
send: 'HEAD http://zip6.zeit.de:9000/cms/work/testing/ HTTP/1.1...
reply: ''
connect: (...)
send: 'HEAD http://zip6.zeit.de:9000/cms/work/testing/ HTTP/1.1...
reply: 'HTTP/1.1 200 OK\r\n'
header: Date: ...
header: Server: ...
header: Keep-Alive: timeout=15, max=100
header: Connection: Keep-Alive
header: Content-Type: text/html;charset=UTF-8
send: 'PROPFIND ...
send: '<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<ns0:propfind xmlns:ns0="DAV:"><ns0:allprop/></ns0:propfind>'
reply: 'HTTP/1.1 207 Multi-Status\r\n'
header: Date: ...
header: Server: ...
header: Content-Length: 914
header: Keep-Alive: timeout=15, max=99
header: Connection: Keep-Alive
header: Content-Type: text/xml; charset="utf-8"
...
[]

We really have reconnected (see also the connect: (...) above):

>>> connection == connector.get_connection()._con
False

Clean up:

>>> zeit.connector.dav.davbase.DEBUG_CONNECTION = False
