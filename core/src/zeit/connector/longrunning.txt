Long running transactions
=========================

Let's test the behaviour of long running transactions. That is we do something
with the connector, wait quite a while and continue. This used to yield
BadStatusLine errors.

>>> import zeit.connector.interfaces
>>> import zope.component
>>> connector = zope.component.getUtility(zeit.connector.interfaces.IConnector)


Enable debugging of the http data:

>>> import zeit.connector.dav.davbase
>>> zeit.connector.dav.davbase.DEBUG_CONNECTION = True


Remember the connection for later:

>>> connection = connector.get_connection()._con
>>> try:
...     del connector.property_cache['http://xml.zeit.de/testing/']
... except KeyError:
...     pass

Get a list:

>>> list(connector.listCollection('http://xml.zeit.de/testing/'))
send: 'HEAD /cms/work/testing HTTP/1.1\r\nAccept-Encoding: identity\r\nHost: <DAVHOST>:<DAVPORT>\r\nConnection: keep-alive\r\nUser-Agent: zeit.connector\r\n\r\n'
reply: 'HTTP/1.1 301 Moved Permanently\r\n'
header: Date: ...
header: Server: ...
header: Location: http://<DAVHOST>:<DAVPORT>/cms/work/testing/
...
header: Keep-Alive: timeout=15, max=...
header: Connection: Keep-Alive
header: Content-Type: text/html; charset=iso-8859-1
send: 'PROPFIND /cms/work/testing/ HTTP/1.1\r\nAccept-Encoding: identity\r\nContent-Length: 99\r\nDepth: 1\r\nConnection: keep-alive\r\nContent-Type: text/xml; charset="utf-8"\r\nHost: <DAVHOST>:<DAVPORT>\r\nUser-Agent: zeit.connector\r\n\r\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<ns0:propfind xmlns:ns0="DAV:"><ns0:allprop/></ns0:propfind>'
reply: 'HTTP/1.1 207 Multi-Status\r\n'
header: Date: ...
header: Server: ...
...
header: Content-Length: ...
header: Keep-Alive: timeout=15, max=...
header: Connection: Keep-Alive
header: Content-Type: text/xml; charset="utf-8"
...
[]


So apparently we may only wait 15 seconds before the connection will time out.
In this case we will silently reconnect. The first request does not reach the
server(hence the "reply: ''"), then the reconnect happens and the request is
sent again:

>>> import time
>>> time.sleep(16)
>>> connector._invalidate_cache('http://xml.zeit.de/testing/')
send: 'PROPFIND /cms/work/testing/ HTTP/1.1\r\nAccept-Encoding: identity\r\nContent-Length: 99\r\nDepth: 1\r\nConnection: keep-alive\r\nContent-Type: text/xml; charset="utf-8"\r\nHost: ...\r\nUser-Agent: zeit.connector\r\n\r\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<ns0:propfind xmlns:ns0="DAV:"><ns0:allprop/></ns0:propfind>'
reply: ''
send: 'PROPFIND /cms/work/testing/ HTTP/1.1\r\nAccept-Encoding: identity\r\nContent-Length: 99\r\nDepth: 1\r\nConnection: keep-alive\r\nContent-Type: text/xml; charset="utf-8"\r\nHost: ...\r\nUser-Agent: zeit.connector\r\n\r\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<ns0:propfind xmlns:ns0="DAV:"><ns0:allprop/></ns0:propfind>'
reply: 'HTTP/1.1 207 Multi-Status\r\n'
header: Date: ...
header: Server: ...
...
header: Content-Length: 914
header: Keep-Alive: timeout=15, max=100
header: Connection: Keep-Alive
header: Content-Type: text/xml; charset="utf-8"
>>> list(connector.listCollection('http://xml.zeit.de/testing/'))
[]


We really have reconnected (see also the connect: (...) above):

>>> connection == connector.get_connection()._con
False

Clean up:

>>> zeit.connector.dav.davbase.DEBUG_CONNECTION = False
