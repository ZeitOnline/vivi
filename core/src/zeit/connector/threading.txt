Threading
=========

We've got some problems with parallel accesses[#functional]_:

>>> import thread
>>> import threading
>>> import zeit.connector.resource
>>> import zeit.connector.test
>>> import StringIO
>>> log = {}
>>> checker = []
>>> import transaction

>>> def create_struct():
...     transaction.abort()
...     base = 'http://xml.zeit.de/testing/%s' % (
...         str(thread.get_ident()).encode('base64')[:-3])
...     import zope.app.component.hooks
...     zope.app.component.hooks.setSite(getRootFolder())
...
...     def add_folder(id):
...         id = u'%s/%s' % (base, id)
...         res = zeit.connector.resource.Resource(
...             id, None, 'folder', StringIO.StringIO(''),
...             contentType = 'httpd/unix-directory')
...         connector.add(res)
...     def add_file(id):
...         id = u'%s/%s' % (base, id)
...         res = zeit.connector.resource.Resource(
...             id, None, 'text', StringIO.StringIO('Pop.'),
...             contentType = 'text/plain')
...         connector.add(res)
...
...     try:
...         add_folder('')
...         add_folder('testroot')
...         add_folder('testroot/a')
...         add_folder('testroot/a/a')
...         transaction.commit()
...         add_folder('testroot/a/b')
...         add_folder('testroot/a/b/c')
...         add_folder('testroot/b')
...         add_folder('testroot/b/a')
...         add_folder('testroot/b/b')
...         add_file('testroot/f')
...         add_file('testroot/g')
...         add_file('testroot/h')
...         add_file('testroot/a/f')
...         add_file('testroot/a/b/c/foo')
...         add_file('testroot/b/b/foo')
...         transaction.commit()
...     except Exception, e:
...         import traceback
...         traceback.print_exc()
...
...     result = zeit.connector.test.list_tree(
...         connector, base)
...     checker.append([r.replace(base, '') for r in result])
...     try:
...         del connector[base]
...     except Exception, e:
...         import traceback
...         traceback.print_exc()

>>> threads = []
>>> while len(threads) < 10:
...     threads.append(threading.Thread(target=create_struct))
>>> for t in threads:
...     t.start()
>>> for t in threads:
...     t.join()

>>> result = [
...     '',
...     u'/testroot/ folder',
...     u'/testroot/a/ folder',
...     u'/testroot/a/a/ folder',
...     u'/testroot/a/b/ folder',
...     u'/testroot/a/b/c/ folder',
...     u'/testroot/a/b/c/foo text',
...     u'/testroot/a/f text',
...     u'/testroot/b/ folder',
...     u'/testroot/b/a/ folder',
...     u'/testroot/b/b/ folder',
...     u'/testroot/b/b/foo text',
...     u'/testroot/f text',
...     u'/testroot/g text',
...     u'/testroot/h text']

>>> len(checker)
10
>>> checker = [c for c in checker if c != result]
>>> checker
[]

After tests we clean up:

>>> zope.app.component.hooks.setSite(old_site)

.. [#functional]

    >>> import zope.app.component.hooks
    >>> old_site = zope.app.component.hooks.getSite()
    >>> zope.app.component.hooks.setSite(getRootFolder())

