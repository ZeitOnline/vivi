RSS blocks
==========

>>> import z3c.etestbrowser.testing
>>> import zeit.content.cp.browser.testing
>>> browser = z3c.etestbrowser.testing.ExtendedTestBrowser()
>>> browser.addHeader('Authorization', 'Basic user:userpw')
>>> zeit.content.cp.browser.testing.create_cp(browser)
>>> browser.open('contents')
>>> contents_url = browser.url
>>> import zeit.content.cp.centerpage
>>> zeit.content.cp.centerpage._test_helper_cp_changed = False
>>> browser.open('informatives/@@landing-zone-drop-module'
...              '?block_type=rss')
>>> zeit.content.cp.centerpage._test_helper_cp_changed
True

Editing the block
-----------------

Feed URLs must be urls:

>>> browser.open(contents_url)
>>> browser.getLink('Edit block properties', index=0).click()
>>> browser.getControl('URL of RSS feed').value = 'foo/bar'
>>> browser.getControl('Apply').click()
>>> print browser.contents
<...
  URL of RSS feed (http://...): <span class="error">The specified URI is not valid.</span>
...


Only http(s) is supported:

>>> browser.getControl('URL of RSS feed').value = 'feed://foo'
>>> browser.getControl('Apply').click()
>>> print browser.contents
<...
  URL of RSS feed (http://...): <span class="error">Only http and https are supported.</span>
...

Set a valid URL:

>>> browser.open(contents_url)
>>> browser.getLink('Edit block properties', index=0).click()
>>> import zeit.content.cp.testing
>>> url = 'http://localhost:%s/tagesschau.xml' % layer['http_port']
>>> browser.getControl('URL of RSS feed').value = url
>>> zeit.content.cp.centerpage._test_helper_cp_changed = False
>>> browser.getControl('Apply').click()
>>> zeit.content.cp.centerpage._test_helper_cp_changed
True
>>> print browser.contents
<...Updated on...

>>> browser.open(contents_url)
>>> browser.getLink('Edit block properties', index=0).click()
>>> browser.getControl('URL').value
'.../tagesschau.xml'

>>> browser.open(contents_url)
>>> print browser.contents
<...RSS Feed...tagesschau.de - Die Nachrichten der ARD...
<ul class="feed-items">
    <li>Sri Lanka: Zivilisten unter Dauerbeschuss</li>
</ul>...

Change to another URL:


>>> url = 'http://localhost:%s/heise.xml' % layer['http_port']
>>> browser.getLink('Edit block properties', index=0).click()
>>> browser.getControl('URL of RSS feed').value = url
>>> print browser.getControl('Items to show').value
5
>>> browser.getControl('Items to show').value = '2'
>>> zeit.content.cp.centerpage._test_helper_cp_changed = False
>>> browser.getControl('Apply').click()
>>> zeit.content.cp.centerpage._test_helper_cp_changed
True
>>> print browser.contents
<...Updated on...

>>> browser.open(contents_url)
>>> print browser.contents
<...
      <div class="block-item">
        <div>heise online News</div>
      </div>
      <ul class="feed-items">
        <li>QSC kann Umsatz und Ergebnis deutlich verbessern</li>
        <li>Applied Materials bleibt in der Verlustzone</li>
      </ul>
      ...

>>> browser.getLink('Edit block properties', index=0).click()
>>> browser.getControl('URL').value
'.../heise.xml'

Teaser image
------------

RSS blocks may have a separate teaser image:

>>> browser.getControl('Teaser image').value = (
...     'http://xml.zeit.de/2006/DSC00109_2.JPG')
>>> browser.getControl('Apply').click()
>>> browser.open(contents_url)
>>> print browser.contents
<...
      <div class="block-item">
        <div>heise online News</div>
        <img class="feed-teaser"
             src="http://localhost/++skin++cms/repository/2006/DSC00109_2.JPG/@@thumbnail" />
      </div>
      ...

The teaser image may also be a teaser group:

>>> import zeit.cms.testing
>>> import zeit.content.image.testing
>>> with zeit.cms.testing.site(getRootFolder()):
...     group = zeit.content.image.testing.create_image_group()
>>> browser.getLink('Edit block properties', index=0).click()
>>> print browser.getControl('Teaser image').value
http://xml.zeit.de/2006/DSC00109_2.JPG
>>> browser.getControl('Teaser image').value = 'http://xml.zeit.de/image-group'
>>> browser.getControl('Apply').click()
>>> browser.open(contents_url)
>>> print browser.contents
<...
      <div class="block-item">
        <div>heise online News</div>
        <img class="feed-teaser"
             src="http://localhost/++skin++cms/repository/image-group/@@thumbnail" />
      </div>
      ...
>>> browser.getLink('Edit block properties', index=0).click()
>>> print browser.getControl('Teaser image').value
http://xml.zeit.de/image-group/


Feed icon
---------

The RSS block may have a (manually set) feed icon, which also can be a teaser
group:

>>> browser.getControl('Feed icon').value = 'http://xml.zeit.de/image-group'
>>> browser.getControl('Apply').click()
>>> browser.open(contents_url)
>>> browser.getLink('Edit block properties', index=0).click()
>>> print browser.getControl('Feed icon').value
http://xml.zeit.de/image-group/

... or a normal image:


>>> browser.getControl('Feed icon').value = (
...     'http://xml.zeit.de/2006/DSC00109_2.JPG')
>>> browser.getControl('Apply').click()
>>> browser.open(contents_url)
>>> browser.getLink('Edit block properties', index=0).click()
>>> print browser.getControl('Feed icon').value
http://xml.zeit.de/2006/DSC00109_2.JPG

Misc properties
---------------

>>> browser.getControl('Show supertitle').selected
True
>>> browser.getControl('Time format').displayValue
['None']
>>> browser.getControl('Show supertitle').selected = False
>>> browser.getControl('Time format').displayValue = ['Time']
>>> browser.getControl('Apply').click()
>>> browser.open(contents_url)
>>> browser.getLink('Edit block properties', index=0).click()
>>> browser.getControl('Show supertitle').selected
False
>>> browser.getControl('Time format').displayValue
['Time']


XML of a RSS block
==================

>>> browser.open(contents_url)
>>> browser.open('xml_source_edit.html')
>>> print browser.getControl('XML Source').value
<...
<container
    cp:type="rss"
    ...
    max_items="2"
    show_supertitle="False"
    time_format="time"
    cp:__name__="id-0691a3c8-5379-495d-b65b-c9a9b5eabaf6"
    url=".../heise.xml">
  <xi:include
      xmlns:xi="http://www.w3.org/2003/XInclude"
      href="/var/cms/work/rss/<MD5>"
      parse="xml"
      xpointer="xpointer(/feed/rss)">
    <xi:fallback>Ziel http://xml.zeit.de/rss/<MD5> nicht erreichbar.</xi:fallback>
  </xi:include>
  <teaser_image base-id="http://xml.zeit.de/image-group/" type="jpg" publication-date="" expires="">
    <bu xsi:nil="true"/>
    <copyright>©</copyright>
  </teaser_image>
  <feed_icon src="http://xml.zeit.de/2006/DSC00109_2.JPG" type="JPG" publication-date="" expires="">
    <bu xsi:nil="true"/>
    <copyright>©</copyright>
  </feed_icon>
</container>...


Feed object display
===================

The feed object displays the feed's title in the repository listing:

>>> browser.open('/++skin++cms/repository/rss/')
>>> print browser.contents
<...tagesschau.de - Die Nachrichten der ARD...

Feed objects do not display a 'checkout' button:

>>> hash_ = browser.etree.xpath('//span[@class="filename"]/text()')[0]
>>> browser.open(hash_ + '/@@view.html')
>>> 'Checkout' not in browser.contents
True


Displaying error messages
=========================

>>> browser.open(contents_url)
>>> browser.getLink('Edit block properties', index=0).click()
>>> browser.getControl('URL').value = 'http://notthere.testing/foo.rss'
>>> browser.getControl('Apply').click()

>>> browser.open(contents_url)
>>> print browser.contents
<...
  <div class="block-title">RSS Feed</div>
      <div class="block-item">
        An error occurred.
      </div>
      <div>ConnectionError: ...</div>
      ...
