RSS blocks
==========

>>> import z3c.etestbrowser.testing
>>> import zeit.content.cp.browser.tests
>>> browser = z3c.etestbrowser.testing.ExtendedTestBrowser()
>>> browser.addHeader('Authorization', 'Basic user:userpw')
>>> zeit.content.cp.browser.tests.create_cp(browser)
>>> browser.open('contents')
>>> contents_url = browser.url
>>> import zeit.content.cp.centerpage
>>> zeit.content.cp.centerpage._test_helper_cp_changed = False
>>> browser.open('informatives/@@landing-zone-drop-module'
...              '?block_type=rss')
>>> zeit.content.cp.centerpage._test_helper_cp_changed
True

Editing the block
-----------------

Feed URLs must be urls:

>>> browser.open(contents_url)
>>> browser.getLink('Edit').click()
>>> browser.open('edit-properties')
>>> browser.getControl('URL of RSS feed').value = 'foo/bar'
>>> browser.getControl('Apply').click()
>>> print browser.contents
<...
  URL of RSS feed (http://...): <span class="error">The specified URI is not valid.</span>
...


Only http(s) is supported (and file):

>>> browser.getControl('URL of RSS feed').value = 'feed://foo'
>>> browser.getControl('Apply').click()
>>> print browser.contents
<...
  URL of RSS feed (http://...): <span class="error">Only http and https are supported.</span>
...

Set a valid URL:

>>> import pkg_resources
>>> browser.open(contents_url)
>>> browser.getLink('Edit').click()
>>> browser.open('edit-properties')
>>> url = 'file://' + pkg_resources.resource_filename(
...     'zeit.content.cp.tests', 'tagesschau.xml')
>>> browser.getControl('URL of RSS feed').value = url
>>> zeit.content.cp.centerpage._test_helper_cp_changed = False
>>> browser.getControl('Apply').click()
>>> zeit.content.cp.centerpage._test_helper_cp_changed
True
>>> print browser.contents
<...self.close();...

>>> browser.open(contents_url)
>>> browser.getLink('Edit').click()
>>> browser.open('edit-properties')
>>> browser.getControl('URL').value
'.../tagesschau.xml'

>>> browser.open(contents_url)
>>> print browser.contents
<...RSS Feed...tagesschau.de - Die Nachrichten der ARD...
<ul class="feed-items">
    <li>Sri Lanka: Zivilisten unter Dauerbeschuss</li>
</ul>...

Change to another URL:


>>> url = 'file://' + pkg_resources.resource_filename(
...     'zeit.content.cp.tests', 'heise.xml')
>>> browser.getLink('Edit').click()
>>> browser.open('edit-properties')
>>> browser.getControl('URL of RSS feed').value = url
>>> zeit.content.cp.centerpage._test_helper_cp_changed = False
>>> browser.getControl('Apply').click()
>>> zeit.content.cp.centerpage._test_helper_cp_changed
True
>>> print browser.contents
<...self.close();...

>>> browser.open(contents_url)
>>> browser.getLink('Edit').click()
>>> browser.open('edit-properties')
>>> browser.getControl('URL').value
'.../heise.xml'



XML of a RSS block
==================

>>> browser.open(contents_url)
>>> browser.open('xml_source_edit.html')
>>> print browser.getControl('XML Source').value
<...
<container
    cp:type="rss"
    module="rss"
    cp:__name__="0691a3c8-5379-495d-b65b-c9a9b5eabaf6"
    url=".../heise.xml">
  <xi:include
      xmlns:xi="http://www.w3.org/2003/XInclude"
      parse="xml"
      xpointer="xpointer(/feed/rss)"
      href="/var/cms/rss/<MD5>">
    <xi:fallback>Ziel http://xml.zeit.de/rss/<MD5> nicht erreichbar.</xi:fallback>
  </xi:include>
</container>...


Feed object display
===================

The feed object displays the feed's title in the repository listing:

>>> browser.open('/++skin++cms/repository/rss/')
>>> print browser.contents
<...tagesschau.de - Die Nachrichten der ARD...
>>> hash_ = browser.etree.xpath('//span[@class="filename"]/text()')[0]
>>> browser.open(hash_ + '/@@view.html')
>>> print browser.contents
<...tagesschau.de - Die Nachrichten der ARD...

Feed objects do not display a 'checkout' button:

>>> 'Checkout' not in browser.contents
True


Displaying error messages
=========================

>>> browser.open(contents_url)
>>> browser.getLink('Edit').click()
>>> browser.open('edit-properties')
>>> browser.getControl('URL').value = 'http://notthere.testing/foo.rss'
>>> browser.getControl('Apply').click()

>>> browser.open(contents_url)
>>> print browser.contents
<...
  <div class="block-title">RSS Feed</div>
      <div class="block-item">
        An error occurred.
      </div>
      <div>URLError: &lt;urlopen error (8, 'nodename nor servname provided, or not known')&gt;</div>
      ...
