Landing zones
=============


See http://cmsdev.zeit.de/content/aufmacher-flÃ¤che-einen-block-anlegen-durch-ziehen-eines-content-objekts


>>> import z3c.etestbrowser.testing
>>> import zeit.content.cp.browser.tests
>>> browser = z3c.etestbrowser.testing.ExtendedTestBrowser()
>>> browser.addHeader('Authorization', 'Basic user:userpw')
>>> browser.xml_strict = True
>>> zeit.content.cp.browser.tests.create_cp(browser)
>>> browser.open('contents')
>>> contents_url = browser.url


There currently is one landing zone, which is indicated by a cms:drop-url:

>>> import lxml.cssselect
>>> browser.open(contents_url)
>>> select = lxml.cssselect.CSSSelector(
...     'div.landing-zone[cms|drop-url]')
>>> nsmap = {'cms': 'http://namespaces.gocept.com/zeit-cms'}
>>> drop_url = browser.etree.xpath(select.path, namespaces=nsmap)[0].get(
...     '{http://namespaces.gocept.com/zeit-cms}drop-url')

Drop testcontent on the landing zone:

>>> url = '%s?uniqueId=http://xml.zeit.de/testcontent' % (drop_url,)
>>> browser.open(url)
>>> browser.open(contents_url)
>>> print browser.contents
<div...
  <div ...class="block type-teaser...


There is another landing zone after the created block now:

>>> select = lxml.cssselect.CSSSelector(
...     'div.block + div.landing-zone[cms|drop-url]')
>>> nsmap = {'cms': 'http://namespaces.gocept.com/zeit-cms'}
>>> drop_url = browser.etree.xpath(select.path, namespaces=nsmap)[0].get(
...     '{http://namespaces.gocept.com/zeit-cms}drop-url')
>>> url = '%s?uniqueId=http://xml.zeit.de/testcontent' % (drop_url,)
>>> browser.open(url)
>>> browser.open(contents_url)
>>> print browser.contents
<div...
  <div ...class="block type-teaser...
  <div ...class="block type-teaser...


Actually there is a landing zone after each created block in the lead area (we
test this here, because there was a bug once which prevented using the lead
area on 2+ blocks):

>>> select = lxml.cssselect.CSSSelector(
...     'div.block + div.landing-zone + '
...     'div.block + div.landing-zone[cms|drop-url]')
>>> nsmap = {'cms': 'http://namespaces.gocept.com/zeit-cms'}
>>> drop_url = browser.etree.xpath(select.path, namespaces=nsmap)[0].get(
...     '{http://namespaces.gocept.com/zeit-cms}drop-url')
>>> url = '%s?uniqueId=http://xml.zeit.de/testcontent' % (drop_url,)
>>> browser.open(url)
>>> browser.open(contents_url)
>>> print browser.contents
<div...
  <div ...class="block type-teaser...
  <div ...class="block type-teaser...
  <div ...class="block type-teaser...
