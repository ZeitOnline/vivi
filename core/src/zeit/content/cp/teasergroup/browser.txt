Teasergroup UI
==============

Creating teaser groups
++++++++++++++++++++++

Creating a teasergroup is an operation on an existing teaserblock.

Create a centerpage:

>>> import z3c.etestbrowser.testing
>>> browser = z3c.etestbrowser.testing.ExtendedTestBrowser()
>>> browser.xml_strict = True
>>> browser.addHeader('Authorization', 'Basic user:userpw')
>>> browser.open('http://localhost/++skin++cms/repository/online/2007/01')
>>> import zeit.content.cp.browser.tests
>>> zeit.content.cp.browser.tests.create_cp(browser)
>>> browser.open('@@contents')
>>> contents_url = browser.url

Create a teaserblock with a few teasers:

>>> import zeit.content.cp.browser.blocks.tests
>>> zeit.content.cp.browser.blocks.tests.create_content(getRootFolder())
>>> browser.open(
...  'lead/@@landing-zone-drop?uniqueId=http://xml.zeit.de/c3')
>>> import cjson
>>> import pprint
>>> result = cjson.decode(browser.contents)
>>> pprint.pprint(result)
{'signals': [{'args': ['cbbf6f19-58b9-4cbb-926b-e3fb521e4900'],
              'name': 'added',
              'when': 'after-reload'},
             {'args': ['lead',
                       'http://localhost/++skin++cms/workingcopy/zope.user/island/lead/@@contents'],
              'name': 'reload',
              'when': None}]}
>>> uuid = result['signals'][0]['args'][0]
>>> browser.open(contents_url)
>>> browser.open('lead/%s/@@drop?uniqueId=http://xml.zeit.de/c2' % uuid)
>>> browser.open(contents_url)
>>> browser.open('lead/%s/@@drop?uniqueId=http://xml.zeit.de/c1' % uuid)

Create a teasergroup for the teasers c1, c2, c3:

>>> browser.open(contents_url)
>>> browser.getLink('Edit teaser list').click()
>>> browser.getLink('Save teasers as group').click()
>>> print browser.contents
<...
  <h1>Save teasers as group</h1>...
>>> browser.getControl('Name of teaser group').value = 'c1, c2 and c3'
>>> browser.getControl('Automatically remove').selected
True
>>> browser.getControl('Create teaser group').click()

After creating the box closes:

>>> print browser.contents
<...
    self.close();
    ...
