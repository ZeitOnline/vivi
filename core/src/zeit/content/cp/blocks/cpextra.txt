CP-Extra bases blocks
======================

``cp_extra`` based blocks are *very* simple blocks. They reference a cpextra id
and nothing more.

Create a cp extra block:

>>> import zeit.content.cp.centerpage
>>> cp = zeit.content.cp.centerpage.CenterPage()
>>> lead = cp.body['lead']
>>> import zeit.edit.interfaces
>>> import zope.component
>>> factory = zope.component.getAdapter(
...     lead, zeit.edit.interfaces.IElementFactory, name='cpextra')
>>> cpextra = factory()
>>> cpextra
<zeit.content.cp.blocks.cpextra.CPExtraBlock...>

Initialy the block is empty and has no module assinged:

>>> print(zeit.cms.testing.xmltotext(cpextra.xml))
<container ... cp:type="cpextra" module="" ... cp:__name__="id-ce7dc496-327f-432d-b6ec-380866c1ce29"/>


CPExtra source
++++++++++++++

The source is contextual.

>>> import pprint
>>> import zeit.content.cp.source
>>> source = zeit.content.cp.source.CPExtraSource()
>>> lead_items = source(cpextra)
>>> pprint.pprint(list(lead_items))
['mostread',
 'mostcommented',
 'weather',
 'stocks',
 'ressort_news',
 'live_search',
 'print_archive',
 'blindblock',
 'homepage_news',
 'dpa-news',
 'authors-register',
 'linkatory',
 'homepage_news_pics',
 'recensionsearch',
 'solr-month',
 'dwds-ticker',
 'sportextra']


The cpextras have titles:

>>> import zope.browser.interfaces
>>> import zope.publisher.browser
>>> request = zope.publisher.browser.TestRequest()
>>> terms = zope.component.getMultiAdapter(
...     (lead_items, request), zope.browser.interfaces.ITerms)
>>> term = terms.getTerm('weather')
>>> print(term.title)
Wetter

cpextras can be filtered using `available` which targets the containing
centerpage:

>>> import zeit.cms.section.interfaces
>>> import zope.interface
>>> zope.interface.alsoProvides(cp, zeit.cms.section.interfaces.IZONContent)
>>> 'zonextra' in list(source(cpextra))
True
