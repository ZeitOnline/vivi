<configure
  xmlns="http://namespaces.zope.org/zope"
  xmlns:grok="http://namespaces.zope.org/grok"
  xmlns:zeit="http://namespaces.zeit.de/CMS/zcml"
  i18n_domain="zeit.cms">

  <!-- include zeit.edit early to make sure the grokkers are grokked. -->
  <include package="zeit.edit" />

  <grok:grok package="." />

  <!-- CenterPage -->

  <utility
    name="zeit.content.cp"
    provides="zope.app.generations.interfaces.ISchemaManager"
    component=".generation.manager"
    />

  <class class=".centerpage.CenterPage">
    <implements interface="zope.annotation.interfaces.IAttributeAnnotatable" />
    <implements interface="zeit.cms.content.interfaces.IDAVPropertiesInXML" />
    <implements interface="zeit.cms.asset.browser.interfaces.IAssetViews" />
    <require
      interface=".interfaces.ICenterPage"
      permission="zope.View" />
    <require
      set_schema=".interfaces.ICenterPage"
      permission="zeit.EditContent" />
  </class>

  <utility
    component=".interfaces.centerPageSource"
    name="zeit.content.cp"
    />

  <adapter
    factory="z3c.traverser.traverser.PluggableTraverser"
    for="zeit.content.cp.interfaces.ICenterPage
         zeit.cms.browser.interfaces.ICMSLayer"
    />

  <subscriber
    factory="zeit.edit.body.PublishTraverser"
    for="zeit.content.cp.interfaces.ICenterPage
    zeit.cms.browser.interfaces.ICMSLayer"
    provides="z3c.traverser.interfaces.ITraverserPlugin"
    />

  <class class=".centerpage.Body">
    <require
      interface="zeit.edit.interfaces.IReadContainer"
      permission="zope.View"
      />
    <require
      interface="zeit.edit.interfaces.IWriteContainer"
      permission="zeit.EditContent"
      />
  </class>

  <adapter
    factory=".centerpage.cp_references"
    name="zeit.content.cp.centerpage"
    />
  <adapter factory="zeit.edit.rule.ValidatingWorkflow"
    provides="zeit.cms.workflow.interfaces.IPublishInfo"
    for=".interfaces.ICenterPage"
    trusted="yes"
    />
  <subscriber handler=".centerpage.modified_propagator" />
  <subscriber handler=".centerpage.update_centerpage_on_checkin" />
  <subscriber
    for="zope.interface.Interface
         zope.container.interfaces.IObjectMovedEvent"
    handler=".centerpage.modified_propagator" />

  <adapter
    factory=".centerpage.Feed"
    provides="zeit.content.cp.interfaces.ICPFeed"
    />
  <subscriber handler=".centerpage.update_feed_items" />

  <!-- Areas -->
  <adapter
    factory=".area.RegionFactory"
    for="zeit.content.cp.interfaces.IBody"
    name="region" />
  <adapter
    factory=".area.AreaFactory"
    for="zeit.content.cp.interfaces.IRegion"
    name="area" />

  <class class=".area.Region">
    <require
      interface="zeit.content.cp.interfaces.IReadRegion"
      permission="zope.View" />
    <require
      set_schema="zeit.content.cp.interfaces.IReadRegion"
      permission="zeit.EditContent" />
    <require
      interface="zeit.content.cp.interfaces.IWriteRegion"
      permission="zeit.EditContent"
      />
  </class>
  <class class=".area.Area">
    <require
      interface="zeit.content.cp.interfaces.IReadArea"
      permission="zope.View" />
    <require
      set_schema="zeit.content.cp.interfaces.IReadArea"
      permission="zeit.EditContent" />
    <require
      interface="zeit.content.cp.interfaces.IWriteArea"
      permission="zeit.EditContent"
      />
  </class>

  <adapter
    provides="zeit.content.cp.interfaces.IRegion"
    name="region"
    factory=".area.Region"
    />
  <adapter
    provides="zeit.content.cp.interfaces.IArea"
    name="area"
    factory=".area.Area"
    />

  <class class=".teaser.Teaser">
    <implements interface="zope.annotation.interfaces.IAttributeAnnotatable" />
    <require
      interface=".interfaces.ITeaser"
      permission="zope.View" />
    <require
      set_schema=".interfaces.ITeaser"
      permission="zeit.EditContent"
      />
  </class>

  <class class=".teaser.XMLTeaser">
    <implements interface="zope.annotation.interfaces.IAttributeAnnotatable" />
    <require
      interface=".interfaces.IXMLTeaser"
      permission="zope.View" />
    <require
      set_schema=".interfaces.IXMLTeaser"
      permission="zeit.EditContent"
      />
  </class>

  <adapter factory=".teaser.XMLTeaserLinkUpdater" name="xmlteaserlink" />
  <subscriber handler=".teaser.warn_about_free_teasers" />

  <adapter factory=".teaser.TeaserLinkUpdater" name="teaserlink" />
  <adapter factory=".teaser.images_for_teaser" />
  <adapter factory=".teaser.teaser_references" name="zeit.content.cp.teaser" />

  <!-- Blocks -->
  <include package=".blocks" />

  <adapter factory=".rule.CenterPageValidator" />

  <!-- Layout -->
  <class class=".layout.BlockLayout">
    <require
      interface=".layout.ITeaserBlockLayout"
      permission="zope.View" />
  </class>

  <!-- RSS Feed -->
  <class class=".feed.Feed">
    <implements interface="zope.annotation.interfaces.IAttributeAnnotatable" />
    <require
      interface=".interfaces.IFeed"
      permission="zope.View" />
    <require
      set_schema=".interfaces.IFeed"
      permission="zeit.EditContent"
      />
  </class>

  <adapter factory="zeit.edit.rule.ValidatingWorkflow"
    provides="zeit.cms.workflow.interfaces.IPublishInfo"
    for=".interfaces.IFeed"
    trusted="yes"
    />

  <adapter
    for="zeit.content.cp.interfaces.IFeed"
    factory=".feed.FeedValidator" />

  <utility factory=".feed.FeedManager" />

  <class class=".automatic.AutomaticArea">
    <require
      interface="zeit.content.cp.interfaces.IRenderedArea"
      permission="zope.View"
      />
    <require
      set_schema="zeit.content.cp.interfaces.IRenderedArea"
      permission="zeit.EditContent"
      />
  </class>

  <adapter
    factory=".automatic.AutomaticArea"
    trusted="yes" />


  <class class=".leadtime.LeadTime">
    <require
      interface=".interfaces.ILeadTime"
      permission="zope.View"
      />
    <require
      set_schema=".interfaces.ILeadTime"
      permission="zeit.EditContent"
      />
  </class>

  <class class=".leadtime.LeadTimeWorklist">
    <require
      interface=".interfaces.ILeadTimeWorklist"
      permission="zope.View"
      />
    <require
      set_schema=".interfaces.ILeadTimeWorklist"
      permission="zeit.workflow.Publish"
      />
  </class>

  <permission
    id="zeit.content.cp.EditArea"
    title="Edit Area"
    />

  <permission
    id="zeit.content.cp.EditOverflow"
    title="Edit Article Flow"
    />

  <interface
    interface=".interfaces.IStoryStream"
    type="zeit.cms.content.interfaces.IAddableContent"
    />
</configure>
