===========================
Article HTML Representation
===========================

The HTML representation ... 

Create an article firs:

>>> import StringIO
>>> from zeit.content.article.article import Article
>>> source = '''\
... <article>
...   <head/>
...   <body>
...     <title>Title</title>
...     <p>A paragraph</p>
...     <p>Another <em>paragraph</em></p>
...     <teaser/>
...   </body>
... </article>'''
>>> article = Article(xml_source=StringIO.StringIO(source))


Get the HTML representation:

>>> print article.html
<p>A paragraph</p>
<p>Another <em>paragraph</em></p>


The original article xml is of course unmodifed so far:

>>> import lxml.etree
>>> print lxml.etree.tostring(article.xml, pretty_print=True)
<article>
  <head/>
  <body>
    <title>Title</title>
    <p>A paragraph</p>
    <p>Another <em>paragraph</em></p>
    <teaser/>
  </body>
</article>


Now for something more complex, the intertitle:


>>> from zeit.content.article.article import Article
>>> source = '''\
... <article>
...   <head/>
...   <body>
...     <title>Title</title>
...     <p>A paragraph</p>
...     <intertitle>Paragraphs are nice</intertitle>  
...     <p>Another <em>paragraph</em></p>
...     <teaser/>
...   </body>
... </article>'''
>>> article = Article(xml_source=StringIO.StringIO(source))

In the html `intertitle` becomes an `h3`:
>>> print article.html
<p>A paragraph</p>
<h3>Paragraphs are nice</h3>
<p>Another <em>paragraph</em></p>


Now we change the HTML and see the reflection in the article XML. The `h3` in
the html becomes an `intertitle` again:

>>> article.html = """\
...   <p>A paragraph with more <em>markup</em></p>
...   <h3>Paragraphs are nice</h3>
...   <p>Another <em>paragraph</em></p>
...   <p>Bla bla bla</p>
... """

>>> print lxml.etree.tostring(article.xml, pretty_print=True)
<article>
  <head/>
  <body>
    <title>Title</title>
    <teaser/>
    <p>A paragraph with more <em>markup</em></p>
    <intertitle>Paragraphs are nice</intertitle>
    <p>Another <em>paragraph</em></p>
    <p>Bla bla bla</p>
  </body>
</article>


HTML-entities are replaced by the real character, but XML entities are not:

>>> article.html = ("""
...   <p>&mdash;&gt;&lt;</p>
... """)

>>> print lxml.etree.tostring(article.xml, pretty_print=True, encoding='utf8')
<article>
  <head/>
  <body>
    <title>Title</title>
    <teaser/>
    <p>â€”&gt;&lt;</p>
  </body>
</article>
