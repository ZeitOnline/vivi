Referencing galleries
=====================

Open editor:

>>> from zope.testbrowser.testing import Browser
>>> browser = Browser()
>>> browser.addHeader('Authorization', 'Basic user:userpw')
>>> browser.open('http://localhost:8080/++skin++vivi/repository/online'
...              '/2007/01/Somalia/@@checkout')
>>> browser.open('@@contents')
>>> contents_url = browser.url
>>> browser.open('editable-body/@@contents')

Clean the article

>>> article = getRootFolder()['workingcopy']['zope.user']['Somalia']
>>> for p in article.xml.body.division.getchildren():
...     article.xml.body.division.remove(p)


Add emty gallery and let it render.

>>> article.xml.body.division.gallery = ''
>>> article.xml.body.division.gallery.set(
...     '{http://namespaces.zeit.de/CMS/cp}__name__', 'gname')
>>> article._p_changed = True
>>> import transaction
>>> transaction.commit()
>>> browser.open('@@contents')
>>> print browser.contents
<...
    <div ...class="block type-gallery"...

Create a gallery (requires folder with images):

>>> from zeit.content.gallery.browser.testing import add_folder, add_image
>>> browser.open('http://localhost/++skin++cms/repository/online/2007/01')
>>> _ = add_folder(browser, 'gallery')
>>> _ = add_image(browser, '01.jpg')
>>> _ = add_image(browser, '02.jpg')
>>> browser.getLink('01').click()
>>> menu = browser.getControl(name='add_menu')
>>> menu.displayValue = ['Gallery']
>>> browser.open(menu.value[0])
>>> browser.getControl('File name').value = 'island'
>>> browser.getControl('Title').value = 'Auf den Spuren der Elfen'
>>> browser.getControl('Ressort').displayValue = ['Reisen']
>>> browser.getControl(name="form.image_folder").value = (
...     'http://xml.zeit.de/online/2007/01/gallery')
>>> browser.getControl(name='form.authors.0.').value = 'Hans Sachs'
>>> browser.getControl(name="form.actions.add").click()
>>> browser.getLink('Checkin').click()

Drop the gallery

>>> browser.open(contents_url)
>>> browser.open(
...  'editable-body/gname/@@set_reference?uniqueId=http://xml.zeit.de/online/2007/01/island')
>>> import pprint
>>> import simplejson
>>> data = simplejson.loads(browser.contents)
>>> pprint.pprint(data)
{'signals': [{'args': ['gname',
                       'http://localhost:8080/++skin++vivi/workingcopy/zope.user/Somalia/editable-body/gname/@@contents'],
              'name': 'reload',
              'when': None}]}
>>> browser.handleErrors = False
>>> browser.open(data['signals'][0]['args'][1])
>>> print browser.contents
<div ...class="block type-gallery"...
    <div class="title">Auf den Spuren der Elfen</div>
    ...


Setting anything but a gallery doesn't work (the error message needs to be
improved at a point):

>>> browser.open(contents_url)
>>> browser.open(
...  'editable-body/gname/@@set_reference?uniqueId=http://xml.zeit.de/testcontent')
Traceback (most recent call last):
    ...
HTTPError: HTTP Error 500: Internal Server Error
>>> print browser.contents
ConstraintNotSatisfied(<zeit.cms.repository.unknown.PersistentUnknownResource object at 0x1075bc500>)


Dropping galleries to a landing zone
------------------------------------

Galleries can also be dropped to a landing zone. A gallery block will be
created then.

>>> for p in article.xml.body.division.getchildren():
...     article.xml.body.division.remove(p)
>>> article._p_changed = True
>>> transaction.commit()
>>> browser.open(contents_url)
>>> print browser.contents
<...
  <div class="landing-zone visible action-content-droppable"
     cms:drop-url="http://localhost:8080/++skin++vivi/workingcopy/zope.user/Somalia/editable-body/@@article-landing-zone-drop">
  Landing Zone
</div>
...
>>> browser.open(
...     'editable-body/@@article-landing-zone-drop?uniqueId='
...     'http://xml.zeit.de/online/2007/01/island')
>>> data = simplejson.loads(browser.contents)
>>> pprint.pprint(data)
{'signals': [{'args': ['f00f330e-29d0-4b53-b312-fc11432e6a37'],
              'name': 'added',
              'when': 'after-reload'},
             {'args': ['editable-body',
                       'http://localhost:8080/++skin++vivi/workingcopy/zope.user/Somalia/editable-body/@@contents'],
              'name': 'reload',
              'when': None}]}
>>> browser.open(contents_url)
>>> print browser.contents
<...
<div ...class="block type-gallery"...
    <div class="title">Auf den Spuren der Elfen</div>
    ...

Each block has its own landing zone:

>>> id = data['signals'][0]['args'][0]
>>> browser.open(
...     ('editable-body/%s/@@article-landing-zone-drop?uniqueId=' % id) +
...     'http://xml.zeit.de/online/2007/01/island')
>>> data = simplejson.loads(browser.contents)
>>> pprint.pprint(data)
{'signals': [{'args': ['f00f330e-29d0-4b53-b312-fc11432e6a37'],
              'name': 'added',
              'when': 'after-reload'},
             {'args': ['editable-body',
                       'http://localhost:8080/++skin++vivi/workingcopy/zope.user/Somalia/editable-body/@@contents'],
              'name': 'reload',
              'when': None}]}
