<tal:block i18n:domain="zeit.cms">
  <form action="" method="post" name="edit-images">
    <table class="edit-image-table">
      <tr>
        <th></th>
        <th i18n:translate="">Filename
          <button name="bulk_edit_filename" type="button" class="bulk-edit" data-field="filename" >Alle ändern</button>
        </th>
        <th i18n:translate="">Copyright
          <button name="bulk_edit_copyright" type="button" class="bulk-edit" data-field="copyright" >Alle ändern</button>
        </th>
        <th i18n:translate="">Title
          <button name="bulk_edit_title" type="button" class="bulk-edit" data-field="title" >Alle ändern</button>
        </th>
        <th i18n:translate="">Caption
          <button name="bulk_edit_caption" type="button" class="bulk-edit" data-field="caption" >Alle ändern</button>
        </th>
      </tr>
      <tr tal:repeat="item view/rows">
        <td><img tal:attributes="src item/thumbnail"><input type="hidden" tal:attributes="value item/tmp_name; name string:tmp_name[${repeat/item/index}]" /></td>
        <td>
            <input tal:attributes="value item/target_name; name string:target_name[${repeat/item/index}]" required="required">
            <div class="error" tal:condition="item/error">
                <span class="error" tal:content="item/error"></span>
            </div>
        </td>
        <td><input tal:attributes="value item/copyright; name string:copyright[${repeat/item/index}]"></td>
        <td><textarea tal:content="item/title" tal:attributes="name string:title[${repeat/item/index}]"></textarea></td>
        <td><textarea tal:content="item/caption" tal:attributes="name string:caption[${repeat/item/index}]"></textarea></td>
      </tr>
    </table>
    <p>
      <button i18n:translate="">Upload</button>
      <button name="upload_and_publish" i18n:translate="">Upload and publish</button>
      <button name="upload_and_open" i18n:translate="">Upload and open</button>
    </p>
    <p>
      <button name="cancel" i18n:translate="">Remove images</button>
    </p>
  </form>
  <script>
      // Mimic core/src/zeit/content/article/edit/browser/resources/filename.js
      const form = document.querySelector('form[name="edit-images"]');

      form.addEventListener('change', e => {
          if (e.target.name.startsWith('target_name[')) {
            e.target.value = zeit.cms.normalize_filename(e.target.value)
          }
      });

      form.addEventListener('click', e => {
          if (e.target.classList.contains('bulk-edit')) {
              const field = e.target.dataset.field;
              bulkEdit(field);
          }
      });

      function bulkEdit(field) {
          let promptMessage, currentValue = '';

          switch(field) {
              case 'filename':
                  promptMessage = 'Inhalt für alle Dateinamen überschreiben';
                  // Get the base name from first filename (remove any existing suffix)
                  const firstFilename = document.querySelector('input[name^="target_name["]').value;
                  currentValue = firstFilename.replace(/-bild(-\d+)?$/, '');
                  break;
              case 'copyright':
                  promptMessage = 'Copyright für alle überschreiben:';
                  currentValue = document.querySelector('input[name^="copyright["]').value;
                  break;
              case 'title':
                  promptMessage = 'Titel für alle überschreiben:';
                  currentValue = document.querySelector('textarea[name^="title["]').value;
                  break;
              case 'caption':
                  promptMessage = 'Bildunterschrift für alle überschreiben:';
                  currentValue = document.querySelector('textarea[name^="caption["]').value;
                  break;
          }

          const newValue = prompt(promptMessage, currentValue);
          if (newValue !== null) {
              applyBulkValue(field, newValue);
          }
      }

      function applyBulkValue(field, value) {
          if (field === 'filename') {
              applyBulkFilenames(value);
          } else {
              const inputs = document.querySelectorAll(`input[name^="${field}["], textarea[name^="${field}["]`);
              inputs.forEach(input => {
                  input.value = value;
              });
          }
      }

      function applyBulkFilenames(baseName) {
          const inputs = document.querySelectorAll('input[name^="target_name["]');
          const normalizedBase = zeit.cms.normalize_filename(baseName);

          inputs.forEach((input, index) => {
              if (inputs.length === 1) {
                  input.value = normalizedBase + '-bild';
              } else {
                  input.value = normalizedBase + '-bild-' + String(index + 1).padStart(2, '0');
              }
          });
      }
  </script>
</tal:block>
