===========
Syndication
===========

If objects which are adaptable to IImages are syndicated, the first image will
be added to the feed.

Setup functional test:

>>> import zope.app.component.hooks
>>> old_site = zope.app.component.hooks.getSite()
>>> zope.app.component.hooks.setSite(getRootFolder())

Create a dummy object which provideds IXMLContent:

>>> import zope.interface
>>> import zeit.cms.content.interfaces
>>> import lxml.objectify
>>> class Content(object):
...     zope.interface.implements(zeit.cms.content.interfaces.IXMLContent)
...     uniqueId = 'dummy-content'
...     xml = lxml.objectify.XML('<content><head/></content>')
...
>>> content = Content()


Also create a feed:

>>> import zeit.cms.syndication.feed
>>> feed = zeit.cms.syndication.feed.Feed()

Insert content to the feed:

>>> feed.insert(0, content)

We have not added any image, so no image is referenced:

>>> print feed.xml_source
<channel xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:py="http://codespeak.net/lxml/objectify/pytype">
  <title/>
  <container>
    <block href="dummy-content"/>
  </container>
  <object_limit py:pytype="int">50</object_limit>
</channel>


We will mostly want to reference image groups, so create one first:

>>> import zeit.content.image.test
>>> group = zeit.content.image.test.create_image_group()

Reference the image group:

>>> import zeit.content.image.interfaces
>>> images = zeit.content.image.interfaces.IImages(content)
>>> images.images = (group, )

Update the metadata of the feed. The image is now referenced:

>>> feed.updateMetadata(content)
>>> print feed.xml_source
<channel xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:py="http://codespeak.net/lxml/objectify/pytype">
  <title/>
  <container>
    <block href="dummy-content">
      <image base-id="http://xml.zeit.de/image-group" type="jpg">
        <bu xsi:nil="true"/>
      </image>
    </block>
  </container>
  <object_limit py:pytype="int">50</object_limit>
</channel>

When more than one image is reference, only the first one will be in the feed:

>>> import zope.component
>>> import zeit.cms.repository.interfaces
>>> repository = zope.component.getUtility(
...     zeit.cms.repository.interfaces.IRepository)
>>> images.images = (group, repository['2006']['DSC00109_2.JPG'],)
>>> feed.updateMetadata(content)
>>> print feed.xml_source
<channel xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:py="http://codespeak.net/lxml/objectify/pytype">
  <title/>
  <container>
    <block href="dummy-content">
      <image base-id="http://xml.zeit.de/image-group" type="jpg">
        <bu xsi:nil="true"/>
      </image>
    </block>
  </container>
  <object_limit py:pytype="int">50</object_limit>
</channel>

Cleanup
=======

>>> zope.app.component.hooks.setSite(old_site)
