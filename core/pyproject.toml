[project]
name = "vivi.core"
authors = [{ name = "DIE ZEIT", email = "zon-backend@zeit.de" }]
version = "7.152.0"
requires-python = ">=3.13"

dependencies = [
    "beautifulsoup4",
    "btrees",
    "collective.monkeypatcher",
    "cryptography",  # so pyjwt can offer rsa
    "elasticsearch >= 9.0.0.dev0",
    "filetype",
    "gocept.cache >= 2.1",
    "gocept.form[formlib]>=0.7.5",  # XXX Should be [ui], but is entrenched
    "gocept.runner>0.5.3",
    "google-cloud-storage>=2.1.0.dev0",
    "grokcore.component",
    "jinja2 >= 2.11.0.dev0",
    "lxml",
    "lxml-html-clean",
    "markdown",
    "markdownify",
    "martian",
    "msal",  # XXX Should be [ui], but ZODB contains persistent objects
    "openapi-schema-validator>=0.6.0.dev0",
    "opentelemetry-api>=1.23.0.dev.0",
    "opentelemetry-instrumentation",
    "opentelemetry-instrumentation-sqlalchemy>=0.38b0",
    "pendulum>=3.0.0.dev0",
    "persistent",
    "pillow",
    "prometheus-client",
    "pyjwt>=2.0.0",
    "pyramid_dogpile_cache2",
    "python-rapidjson",
    "pyyaml",
    "requests",
    "requests_file",
    "sqlalchemy>=2.0.0.dev0",
    "greenlet",  # XXX sqlalchemy dependency, that pip-compile does not recognize
    "transaction",
    "webob",
    "werkzeug",
    "z3c.celery >= 1.2.0.dev0",  # XXX Should be [ui], but is entrenched
    "z3c.traverser",  # XXX Should be [ui], but is entrenched
    "zc.form",  # Should be [ui], but it also contains schema fields
    "zc.queue",
    "zc.relation",
    "zc.set",
    "zc.sourcefactory",
    "zodb",
    "zodburi",
    "zope.annotation",
    "zope.app.appsetup",
    "zope.app.file",
    "zope.app.folder",
    "zope.app.keyreference",
    "zope.app.locking",
    "zope.app.security",
    "zope.cachedescriptors",
    "zope.component",
    "zope.container>=3.8.1",
    "zope.copypastemove",
    "zope.deferredimport",  # undeclared by zc.form
    "zope.dottedname",
    "zope.event",
    "zope.exceptions",
    "zope.file",
    "zope.generations",
    "zope.i18n>3.4.0",
    "zope.index",
    "zope.interface",
    "zope.lifecycleevent",
    "zope.location>=3.4.0b2",
    "zope.principalannotation",  # XXX Should be [ui], but ZODB contains persistent objects
    "zope.proxy",
    "zope.publisher >= 6.0.0.dev0",  # XXX Should be [ui], but is entrenched
    "zope.schema",
    "zope.security",
    "zope.securitypolicy",
    "zope.site",
    "zope.sqlalchemy",
    "zope.traversing",  # XXX Should be [ui], but is entrenched
    "zope.xmlpickle",
]

[project.optional-dependencies]
ui = [
    "celery >= 4.0",
    "celery_redis_sync",
    "cssutils",
    "docutils",
    "fanstatic",
    "gocept.fckeditor[fanstatic]",
    "gocept.pagelet",
    "js.backbone",
    "js.cropper",
    "js.handlebars",
    "js.jquery",
    "js.jqueryui",
    "js.mochikit",
    "js.select2",
    "js.underscore",
    "js.vanderlee_colorpicker",
    "lxml",
    "lxml_html_clean",
    "opentelemetry-instrumentation-celery",
    "opentelemetry-instrumentation-requests",
    "opentelemetry-instrumentation-wsgi",
    "pygments",
    "pypandoc",
    "redis",
    "repoze.vhm",
    "z3c.flashmessage",
    "z3c.menu.simple>=0.5.1",
    "z3c.noop",
    "zc.datetimewidget",
    "zc.table",
    "zconfig",
    "zeep",
    "zope.app.authentication",
    "zope.app.basicskin",  # undeclared by zope.app.preference
    "zope.app.container",
    "zope.app.exception",
    "zope.app.form>=3.6.0",
    "zope.app.locales",
    "zope.app.pagetemplate",
    "zope.app.preference",
    "zope.app.principalannotation",
    "zope.app.publication",
    "zope.app.publisher",
    "zope.app.tree",
    "zope.app.wsgi",
    "zope.authentication",
    "zope.browser",
    "zope.browserpage",
    "zope.componentvocabulary",
    "zope.configuration",
    "zope.error",
    "zope.formlib",
    "zope.login",
    "zope.pluggableauth",
    "zope.principalregistry",
    "zope.session",
    "zope.viewlet",
]

test = [
    "celery >= 5.0",
    "cssselect",
    "docker",
    "gcp-storage-emulator",
    "gocept.httpserverlayer>=1.4.0.dev0",
    "gocept.jasmine",
    "gocept.jslint>=0.2",
    "gocept.selenium",
    "gocept.testing>=1.4.0.dev0",
    "opentelemetry-exporter-otlp",
    "opentelemetry-sdk",
    "packaging",
    "plone.testing[zca,zodb]",
    "pytest",
    "pytest-cov",
    "pytest-remove-stale-bytecode",
    "pytest-rerunfailures",
    "pytest-xdist",
    "requests-mock",
    "selenium >= 4.0.0.dev0",
    "time-machine",
    "waitress",
    "webtest",
    "xlrd",
    "xmldiff",
    "zope.app.wsgi",
    "zope.configuration",
    "zope.error",
    "zope.pytestlayer",
    "zope.testbrowser",
    "zope.testing>=3.8.0",
]

deploy = [
    "alembic",
    "celery-redis-prometheus>=1.5.0.dev0",
    "celery-worker-healthcheck",
    "flower",
    "fluent-logger",
    "grpcio-status",  # warning instead of required by google-api-core
    "gunicorn",
    "gunicorn_environmentconfig",
    "gunicorn_worker_healthcheck",
    "opentelemetry-exporter-otlp",
    "opentelemetry-exporter-prometheus",
    "opentelemetry-sdk",
    "opentelemetry-sdk-extension-prometheus-multiprocess >= 1.2.0.dev0",
    "pastedeploy",
    "psycopg2-binary",
    "python-json-logger",
    "relstorage",
    "repoze.vhm",
    "sqlalchemy-bigquery",
    "waitress",
]

zon = [
    "gocept.form==0.8.0+py3",  # https://github.com/ZeitOnline/gocept.form
    "zope.app.locking==3.5.0+py3.1",  # https://github.com/ZeitOnline/zope.app.locking
    "zope.xmlpickle==4.0.0+py3k1",  # https://github.com/ZeitOnline/zope.xmlpickle/tree/py3
]
test-zon = [
    "gocept.jasmine==0.7+py3.2",  # https://github.com/ZeitOnline/gocept.jasmine
]
ui-zon = [
    "gocept.fckeditor==2.6.4.1.post3+py3.3",  # https://github.com/ZeitOnline/gocept.fckeditor/tree/py3
    "gocept.mochikit==1.4.2.5+py3",  # https://github.com/ZeitOnline/gocept.mochikit
    "js.jqueryui==1.10.3+tooltip",  # XXX no repository?
    "z3c.noop==1.0+py3.3",  # https://github.com/ZeitOnline/z3c.noop
    "z3c.menu.simple==0.6.0+py3.3",  # https://github.com/ZeitOnline/z3c.menu.simple
    "z3c.traverser==2.0.0+notests",  # https://github.com/ZeitOnline/z3c.traverser
    "zc.datetimewidget==0.8.0+py3.2",  # https://github.com/ZeitOnline/zc.datetimewidget
]

[dependency-groups]
release = ["towncrier"]

[[tool.uv.index]]
name = "pypi-zon"
url = "https://europe-west3-python.pkg.dev/zeitonline-engineering/pypi-zon/simple/"
default = true
publish-url = "https://europe-west3-python.pkg.dev/zeitonline-engineering/pypi-zon-internal/"

[project.scripts]
alembic-vivi = "zeit.connector.cli:alembic"
alembic-vivi-wait = "zeit.connector.cli:wait_for_migrations"
author-report-invalid-gcid = "zeit.content.author.honorar:report_invalid_gcid"
change-volume-access = "zeit.content.volume.volume:change_access"
clean-objectlog = "zeit.objectlog.objectlog:clean"
dav-cache-sweep = "zeit.connector.cache:sweep"
delete-content = "zeit.cms.content.cli:delete_content"
delete-content-from-tms-indexes = "zeit.retresco.cli:delete_content_from_tms_indexes"
external-javascript-sweep = "zeit.sourcepoint.connection:sweep"
external-javascript-update = "zeit.sourcepoint.connection:update"
import-dpa-news-api = "zeit.newsimport.cli:import_dpa_news_api"
export-import-clipboards = "zeit.cms.clipboard.cli:export_import"
export-import-objectlogs = "zeit.objectlog.cli:export_import"
export-import-permissions = "zeit.securitypolicy.cli:export_import"
export-import-workingcopy = "zeit.cms.workingcopy.cli:export_import"
ingredients-collect-used = "zeit.wochenmarkt.cli:collect_used"
kpi-import-data = "zeit.kpi.update:main"
prewarm-cache = "zeit.connector.cli:prewarm_cache"
provide-interface = "zeit.cms.cli:provide_interface"
publish-tasks = "zeit.cms.workflow.cli:tasks"
publish-content = "zeit.cms.workflow.cli:publish"
refresh-cache = "zeit.connector.cli:refresh_cache"
retract-content = "zeit.cms.workflow.cli:retract"
retract-scheduled-content = "zeit.workflow.cli:retract_scheduled_content"
publish-scheduled-content = "zeit.workflow.cli:publish_scheduled_content"
search-elastic = "zeit.find.cli:search_elastic"
tms-reindex-object = "zeit.retresco.update:reindex"
ua-payload-doc = "zeit.push.urbanairship:print_payload_documentation"
unlock-overdue-locks = "zeit.connector.postgresql:unlock_overdue_locks"
update-topiclist = "zeit.retresco.connection:update_topiclist"
vgwort-bulk-report = "zeit.vgwort.cli:bulk_report"
vgwort-order-tokens = "zeit.vgwort.token:order_tokens"
vgwort-report = "zeit.vgwort.report:report_new_documents"
vivi-config-history = "zeit.cms.history:main"
vivi-metrics = "zeit.cms.metrics:collect"
vivi-waitress = "zeit.cms.cli:waitress_serve"
vivi-zodbpack = "zeit.cms.relstorage:zodbpack"
zopeshell = "zeit.cms.cli:zope_shell"

[project.entry-points."fanstatic.libraries"]
zeit_addcentral = "zeit.addcentral.resources:lib"
zeit_cmp = "zeit.cmp.browser.resources:lib"

zeit_cms = "zeit.cms.browser.resources:lib_css"
zeit_cms_js = "zeit.cms.browser.resources:lib_js"
zeit_cms_content = "zeit.cms.content.browser.resources:lib"
zeit_cms_workingcopy = "zeit.cms.workingcopy.browser.resources:lib"
zeit_cms_tagging = "zeit.cms.tagging.browser.resources:lib"
zeit_cms_clipboard = "zeit.cms.clipboard.browser.resources:lib"

zeit_content_article = "zeit.content.article.edit.browser.resources:lib"
zeit_content_article_recension = "zeit.content.article.browser.resources:lib"
zeit_content_author = "zeit.content.author.browser.resources:lib"
zeit_content_cp = "zeit.content.cp.browser.resources:lib"
zeit_content_gallery = "zeit.content.gallery.browser.resources:lib"
zeit_content_image = "zeit.content.image.browser.resources:lib"
zeit_content_link = "zeit.content.link.browser.resources:lib"
zeit_content_volume = "zeit.content.volume.browser.resources:lib"

zeit_edit = "zeit.edit.browser.resources:lib_css"
zeit_edit_js = "zeit.edit.browser.resources:lib_js"
zeit_find = "zeit.find.browser.resources:lib"
zeit_crop = "zeit.crop.browser.resources:lib"
zeit_push = "zeit.push.browser.resources:lib"
zeit_seo = "zeit.seo.browser.resources:lib"
zeit_wochenmarkt = "zeit.wochenmarkt.browser.resources:lib"
zeit_workflow = "zeit.workflow.browser.resources:lib"
zeit_wysiwyg = "zeit.wysiwyg.browser.resources:lib"

zc_table = "zeit.cms.browser.resources:zc_table"
zc_datetimewidget = "zeit.cms.browser.resources:zc_datetimewidget"

[project.entry-points.pytest11]
zeit_vivi = "zeit.pytest"

[project.entry-points."zodburi.resolvers"]
psql = "zeit.cms.relstorage:psql_resolver"
pgsock = "zeit.cms.relstorage:socket_resolver"


[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "zeit"
namespace = true
source-exclude = [
    "src/zeit/connector/testcontent/**",
]


[tool.towncrier]
directory = "docs/changelog/"
filename = "CHANGES.rst"
# Our changelog file already has a title
title_format = ""
# First underline is used for version/date header.
# Second underline is used for the type names (like 'Bug fixes:').
underlines = ["-", ""]

template = "docs/towncrier-template"

[[tool.towncrier.type]]
directory = "change"
name = "Issues"
showcontent = true

[[tool.towncrier.type]]
directory = "fix"
name = "FIX:"
showcontent = true

[[tool.towncrier.type]]
directory = "maint"
name = "MAINT:"
showcontent = true
